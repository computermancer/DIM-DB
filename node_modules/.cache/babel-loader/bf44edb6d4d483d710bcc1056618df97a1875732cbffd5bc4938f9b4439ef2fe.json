{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bravo\\\\Downloads\\\\BIG-DIM\\\\dim-drill-dashboard\\\\src\\\\components\\\\DrillLibrary.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../config/supabase';\nimport { Link } from 'react-router-dom';\nimport { Toast } from './Toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function DrillLibrary() {\n  _s();\n  const [drills, setDrills] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [drillToDelete, setDrillToDelete] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  const [toastType, setToastType] = useState('success');\n  const [expandedDrillId, setExpandedDrillId] = useState(null);\n  const [instructions, setInstructions] = useState({});\n  const [editedInstructions, setEditedInstructions] = useState({});\n  const [saving, setSaving] = useState(false);\n  const [editMode, setEditMode] = useState({});\n  const [editedDrill, setEditedDrill] = useState({});\n  const showErrorToast = message => {\n    setError(message);\n    setSuccessMessage(message);\n    setToastType('error');\n    setShowToast(true);\n  };\n  const showSuccessToast = message => {\n    setSuccessMessage(message);\n    setToastType('success');\n    setShowToast(true);\n  };\n  useEffect(() => {\n    fetchDrills();\n  }, []);\n  async function fetchDrills() {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data,\n        error\n      } = await supabase.from('drills').select('*');\n      if (error) throw error;\n      setDrills(data || []);\n    } catch (err) {\n      showErrorToast('Failed to fetch drills: ' + err.message);\n      console.error('Error fetching drills:', err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function deleteDrill(id) {\n    // Set the drill to delete, which will trigger the confirmation popup\n    setDrillToDelete(drills.find(drill => drill.id === id));\n  }\n  const handleStartEdit = drill => {\n    setEditMode({\n      ...editMode,\n      [drill.id]: true\n    });\n    setEditedDrill({\n      ...editedDrill,\n      [drill.id]: {\n        ...drill\n      }\n    });\n  };\n  const handleCancelEdit = drillId => {\n    setEditMode({\n      ...editMode,\n      [drillId]: false\n    });\n    setEditedDrill({\n      ...editedDrill,\n      [drillId]: undefined\n    });\n  };\n  const handleFieldEdit = (drillId, field, value) => {\n    setEditedDrill({\n      ...editedDrill,\n      [drillId]: {\n        ...editedDrill[drillId],\n        [field]: value\n      }\n    });\n  };\n  async function handleSaveEdit(drillId) {\n    try {\n      setLoading(true);\n      setError(null);\n      const updatedData = editedDrill[drillId];\n\n      // Update the drill in the database\n      const {\n        error\n      } = await supabase.from('drills').update(updatedData).eq('id', drillId);\n      if (error) throw error;\n\n      // Update local state\n      setDrills(drills.map(drill => drill.id === drillId ? {\n        ...drill,\n        ...updatedData\n      } : drill));\n\n      // Exit edit mode\n      handleCancelEdit(drillId);\n\n      // Show success message\n      showSuccessToast('Drill updated successfully');\n    } catch (err) {\n      showErrorToast('Failed to update drill: ' + (err.message || 'Unknown error'));\n      console.error('Error updating drill:', err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function confirmDelete() {\n    if (!drillToDelete) return;\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Delete the drill (no need to delete instructions separately since they're in the same table)\n      const {\n        error\n      } = await supabase.from('drills').delete().eq('id', drillToDelete.id);\n      if (error) throw error;\n\n      // Update the local state to remove the deleted drill\n      setDrills(drills.filter(drill => drill.id !== drillToDelete.id));\n\n      // Show success message\n      showSuccessToast('Drill deleted successfully');\n    } catch (err) {\n      showErrorToast('Failed to delete drill: ' + (err.message || 'Unknown error'));\n      console.error('Error deleting drill:', err);\n    } finally {\n      setLoading(false);\n      setDrillToDelete(null); // Close the popup after successful deletion\n    }\n  }\n  async function toggleInstructions(drillId) {\n    if (expandedDrillId === drillId) {\n      setExpandedDrillId(null);\n      setEditMode({\n        ...editMode,\n        [drillId]: false\n      });\n      return;\n    }\n    setExpandedDrillId(drillId);\n\n    // If we don't have instructions for this drill yet, fetch them\n    if (!instructions[drillId]) {\n      try {\n        setLoading(true);\n\n        // Try to fetch instructions from the drills table\n        const {\n          data,\n          error\n        } = await supabase.from('drills').select('id, instructions').eq('id', drillId).single();\n        if (error) {\n          console.error('Error fetching instructions:', error);\n          setInstructions(prev => ({\n            ...prev,\n            [drillId]: null\n          }));\n        } else {\n          // Create an instructions object from the drill data\n          const instructionsData = {\n            drill_id: drillId,\n            instructions: data.instructions || ''\n          };\n          setInstructions(prev => ({\n            ...prev,\n            [drillId]: instructionsData\n          }));\n          setEditedInstructions(prev => ({\n            ...prev,\n            [drillId]: instructionsData\n          }));\n          // Set edit mode to false for existing instructions\n          setEditMode({\n            ...editMode,\n            [drillId]: false\n          });\n        }\n      } catch (err) {\n        console.error('Error in toggleInstructions:', err);\n        setInstructions(prev => ({\n          ...prev,\n          [drillId]: null\n        }));\n      } finally {\n        setLoading(false);\n      }\n    }\n  }\n\n  // Add a new function to handle adding instructions\n  function addInstructions(drillId) {\n    // Create empty instructions object\n    const emptyInstructions = {\n      drill_id: drillId,\n      instructions: ''\n    };\n\n    // Set the instructions and edited instructions\n    setInstructions(prev => ({\n      ...prev,\n      [drillId]: emptyInstructions\n    }));\n    setEditedInstructions(prev => ({\n      ...prev,\n      [drillId]: emptyInstructions\n    }));\n\n    // Set edit mode to true\n    setEditMode({\n      ...editMode,\n      [drillId]: true\n    });\n  }\n  async function saveInstructions(drillId) {\n    if (!editedInstructions[drillId]) return;\n    try {\n      setSaving(true);\n\n      // Log the data we're trying to save\n      console.log('Saving instructions for drill:', drillId);\n      console.log('Instructions data:', editedInstructions[drillId]);\n\n      // Save instructions directly to the drills table\n      console.log('Saving instructions to the drills table');\n      const {\n        error: drillUpdateError\n      } = await supabase.from('drills').update({\n        instructions: editedInstructions[drillId].instructions || ''\n      }).eq('id', drillId);\n      if (drillUpdateError) {\n        console.error('Drill update error:', drillUpdateError);\n        throw new Error('Failed to save instructions: ' + (drillUpdateError.message || 'Unknown error'));\n      }\n\n      // Update the instructions state with the edited instructions\n      setInstructions(prev => ({\n        ...prev,\n        [drillId]: editedInstructions[drillId]\n      }));\n      showSuccessToast('Instructions saved successfully');\n    } catch (err) {\n      console.error('Error saving instructions:', err);\n      showErrorToast('Failed to save instructions: ' + (err.message || 'Unknown error'));\n    } finally {\n      setSaving(false);\n    }\n  }\n  function handleInputChange(drillId, field, value) {\n    setEditedInstructions(prev => ({\n      ...prev,\n      [drillId]: {\n        ...prev[drillId],\n        [field]: value\n      }\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6 text-orange-400\",\n      children: \"Drill Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      message: successMessage,\n      isVisible: showToast,\n      onClose: () => setShowToast(false),\n      type: toastType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: \"Loading drills...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this) : drills.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-400\",\n      children: \"No drills found. Add some drills to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: drills.map((drill, index) => {\n        var _editedDrill$drill$id, _editedDrill$drill$id2, _editedDrill$drill$id3, _editedDrill$drill$id4, _editedDrill$drill$id5, _editedDrill$drill$id6, _editedDrill$drill$id7, _editedDrill$drill$id8, _editedDrill$drill$id9, _editedDrill$drill$id10, _editedDrill$drill$id11, _editedDrill$drill$id12, _instructions$drill$i2, _instructions$drill$i3, _editedInstructions$d;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-[#2c2c2c] border border-[#3a3a3a] p-4 rounded shadow relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-2 right-2 flex space-x-2\",\n            children: editMode[drill.id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-green-600 hover:bg-green-500 text-white px-2 py-1 rounded\",\n                onClick: () => handleSaveEdit(drill.id),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-gray-600 hover:bg-gray-500 text-white px-2 py-1 rounded\",\n                onClick: () => handleCancelEdit(drill.id),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-blue-600 hover:bg-blue-500 text-white px-2 py-1 rounded\",\n                onClick: () => handleStartEdit(drill),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-red-600 hover:bg-red-500 text-white px-2 py-1 rounded\",\n                onClick: () => deleteDrill(drill.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold\",\n                children: drill.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm\",\n                children: \"Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Purpose:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id = editedDrill[drill.id]) === null || _editedDrill$drill$id === void 0 ? void 0 : _editedDrill$drill$id.purpose) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'purpose', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this) : drill.purpose || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Plane:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id2 = editedDrill[drill.id]) === null || _editedDrill$drill$id2 === void 0 ? void 0 : _editedDrill$drill$id2.plane) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'plane', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this) : drill.plane || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Muscles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id3 = editedDrill[drill.id]) === null || _editedDrill$drill$id3 === void 0 ? void 0 : _editedDrill$drill$id3.muscles) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'muscles', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this) : drill.muscles || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Joint Actions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id4 = editedDrill[drill.id]) === null || _editedDrill$drill$id4 === void 0 ? void 0 : _editedDrill$drill$id4.joint_actions) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'joint_actions', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this) : drill.joint_actions || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Nervous System:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id5 = editedDrill[drill.id]) === null || _editedDrill$drill$id5 === void 0 ? void 0 : _editedDrill$drill$id5.nervous_system) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'nervous_system', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 23\n                }, this) : drill.nervous_system || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Psych Components:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id6 = editedDrill[drill.id]) === null || _editedDrill$drill$id6 === void 0 ? void 0 : _editedDrill$drill$id6.psych_components) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'psych_components', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this) : drill.psych_components || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Tendons Loaded:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id7 = editedDrill[drill.id]) === null || _editedDrill$drill$id7 === void 0 ? void 0 : _editedDrill$drill$id7.tendons_loaded) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'tendons_loaded', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 23\n                }, this) : drill.tendons_loaded || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Influences:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id8 = editedDrill[drill.id]) === null || _editedDrill$drill$id8 === void 0 ? void 0 : _editedDrill$drill$id8.influences) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'influences', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this) : drill.influences || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Execution Needs:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id9 = editedDrill[drill.id]) === null || _editedDrill$drill$id9 === void 0 ? void 0 : _editedDrill$drill$id9.execution_needs) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'execution_needs', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this) : drill.execution_needs || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Regression:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ((_editedDrill$drill$id10 = editedDrill[drill.id]) === null || _editedDrill$drill$id10 === void 0 ? void 0 : _editedDrill$drill$id10.regression) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'regression', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 23\n                }, this) : drill.regression || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-span-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Notes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: ((_editedDrill$drill$id11 = editedDrill[drill.id]) === null || _editedDrill$drill$id11 === void 0 ? void 0 : _editedDrill$drill$id11.notes) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'notes', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\",\n                  rows: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this) : drill.notes || 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-span-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Video URL:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 21\n                }, this), ' ', editMode[drill.id] ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"url\",\n                  value: ((_editedDrill$drill$id12 = editedDrill[drill.id]) === null || _editedDrill$drill$id12 === void 0 ? void 0 : _editedDrill$drill$id12.video_url) || '',\n                  onChange: e => handleFieldEdit(drill.id, 'video_url', e.target.value),\n                  className: \"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\",\n                  placeholder: \"https://example.com/video\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this) : drill.video_url ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: drill.video_url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"text-blue-400 hover:text-blue-300 underline\",\n                  children: drill.video_url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 25\n                }, this) : 'No current data.']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 pt-4 border-t border-[#3a3a3a]\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleInstructions(drill.id),\n                  className: \"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\",\n                  children: expandedDrillId === drill.id ? 'Hide Instructions' : 'Show Instructions'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this), expandedDrillId === drill.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    var _instructions$drill$i;\n                    if (editMode[drill.id]) {\n                      // If already in edit mode, cancel editing\n                      setEditMode({\n                        ...editMode,\n                        [drill.id]: false\n                      });\n                    } else if ((_instructions$drill$i = instructions[drill.id]) !== null && _instructions$drill$i !== void 0 && _instructions$drill$i.instructions) {\n                      // If instructions exist, toggle edit mode\n                      setEditMode({\n                        ...editMode,\n                        [drill.id]: true\n                      });\n                    } else {\n                      // If no instructions, add new ones\n                      addInstructions(drill.id);\n                    }\n                  },\n                  className: \"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\",\n                  children: editMode[drill.id] ? 'Cancel Editing' : (_instructions$drill$i2 = instructions[drill.id]) !== null && _instructions$drill$i2 !== void 0 && _instructions$drill$i2.instructions ? 'Edit Instructions' : 'Add Instructions'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this), expandedDrillId === drill.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center py-4\",\n                  children: \"Loading instructions...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 25\n                }, this) : !instructions[drill.id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center py-4 text-gray-400\",\n                  children: \"No instructions available yet.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: !editMode[drill.id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-md font-semibold text-orange-300 mb-2\",\n                        children: \"Instructions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-[#1a1a1a] border border-[#3a3a3a] p-3 rounded text-white whitespace-pre-wrap\",\n                        children: ((_instructions$drill$i3 = instructions[drill.id]) === null || _instructions$drill$i3 === void 0 ? void 0 : _instructions$drill$i3.instructions) || 'No instructions available.'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-md font-semibold text-orange-300 mb-2\",\n                        children: \"Instructions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        className: \"w-full bg-[#1a1a1a] border border-[#3a3a3a] p-2 rounded text-white\",\n                        rows: \"6\",\n                        value: ((_editedInstructions$d = editedInstructions[drill.id]) === null || _editedInstructions$d === void 0 ? void 0 : _editedInstructions$d.instructions) || '',\n                        onChange: e => handleInputChange(drill.id, 'instructions', e.target.value),\n                        placeholder: \"Enter instructions for this drill...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-end\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          saveInstructions(drill.id);\n                          setEditMode({\n                            ...editMode,\n                            [drill.id]: false\n                          });\n                        },\n                        disabled: saving,\n                        className: \"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\",\n                        children: saving ? 'Saving...' : 'Save Instructions'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 526,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), drillToDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#2c2c2c] p-6 rounded-lg shadow-lg max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-orange-400 mb-4\",\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6\",\n          children: \"Are you sure you want to delete this drill?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\",\n            onClick: () => setDrillToDelete(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\",\n            onClick: confirmDelete,\n            children: \"Yes, Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(DrillLibrary, \"Rzc4/ZPrbD+7OpxWtLwb2a4CQ0g=\");\n_c = DrillLibrary;\nvar _c;\n$RefreshReg$(_c, \"DrillLibrary\");","map":{"version":3,"names":["useState","useEffect","supabase","Link","Toast","jsxDEV","_jsxDEV","Fragment","_Fragment","DrillLibrary","_s","drills","setDrills","error","setError","loading","setLoading","drillToDelete","setDrillToDelete","successMessage","setSuccessMessage","showToast","setShowToast","toastType","setToastType","expandedDrillId","setExpandedDrillId","instructions","setInstructions","editedInstructions","setEditedInstructions","saving","setSaving","editMode","setEditMode","editedDrill","setEditedDrill","showErrorToast","message","showSuccessToast","fetchDrills","data","from","select","err","console","deleteDrill","id","find","drill","handleStartEdit","handleCancelEdit","drillId","undefined","handleFieldEdit","field","value","handleSaveEdit","updatedData","update","eq","map","confirmDelete","delete","filter","toggleInstructions","single","prev","instructionsData","drill_id","addInstructions","emptyInstructions","saveInstructions","log","drillUpdateError","Error","handleInputChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isVisible","onClose","type","length","index","_editedDrill$drill$id","_editedDrill$drill$id2","_editedDrill$drill$id3","_editedDrill$drill$id4","_editedDrill$drill$id5","_editedDrill$drill$id6","_editedDrill$drill$id7","_editedDrill$drill$id8","_editedDrill$drill$id9","_editedDrill$drill$id10","_editedDrill$drill$id11","_editedDrill$drill$id12","_instructions$drill$i2","_instructions$drill$i3","_editedInstructions$d","onClick","name","purpose","onChange","e","target","plane","muscles","joint_actions","nervous_system","psych_components","tendons_loaded","influences","execution_needs","regression","notes","rows","video_url","placeholder","href","rel","_instructions$drill$i","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bravo/Downloads/BIG-DIM/dim-drill-dashboard/src/components/DrillLibrary.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { supabase } from '../config/supabase';\nimport { Link } from 'react-router-dom';\nimport { Toast } from './Toast';\n\nexport function DrillLibrary() {\n  const [drills, setDrills] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [drillToDelete, setDrillToDelete] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  const [toastType, setToastType] = useState('success');\n  const [expandedDrillId, setExpandedDrillId] = useState(null);\n  const [instructions, setInstructions] = useState({});\n  const [editedInstructions, setEditedInstructions] = useState({});\n  const [saving, setSaving] = useState(false);\n  const [editMode, setEditMode] = useState({});\n  const [editedDrill, setEditedDrill] = useState({});\n\n  const showErrorToast = (message) => {\n    setError(message);\n    setSuccessMessage(message);\n    setToastType('error');\n    setShowToast(true);\n  };\n\n  const showSuccessToast = (message) => {\n    setSuccessMessage(message);\n    setToastType('success');\n    setShowToast(true);\n  };\n\n  useEffect(() => {\n    fetchDrills();\n  }, []);\n\n  async function fetchDrills() {\n    try {\n      setLoading(true);\n      setError(null);\n      const { data, error } = await supabase.from('drills').select('*');\n      if (error) throw error;\n      setDrills(data || []);\n    } catch (err) {\n      showErrorToast('Failed to fetch drills: ' + err.message);\n      console.error('Error fetching drills:', err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function deleteDrill(id) {\n    // Set the drill to delete, which will trigger the confirmation popup\n    setDrillToDelete(drills.find(drill => drill.id === id));\n  }\n\n  const handleStartEdit = (drill) => {\n    setEditMode({ ...editMode, [drill.id]: true });\n    setEditedDrill({\n      ...editedDrill,\n      [drill.id]: { ...drill }\n    });\n  };\n\n  const handleCancelEdit = (drillId) => {\n    setEditMode({ ...editMode, [drillId]: false });\n    setEditedDrill({\n      ...editedDrill,\n      [drillId]: undefined\n    });\n  };\n\n  const handleFieldEdit = (drillId, field, value) => {\n    setEditedDrill({\n      ...editedDrill,\n      [drillId]: {\n        ...editedDrill[drillId],\n        [field]: value\n      }\n    });\n  };\n\n  async function handleSaveEdit(drillId) {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const updatedData = editedDrill[drillId];\n      \n      // Update the drill in the database\n      const { error } = await supabase\n        .from('drills')\n        .update(updatedData)\n        .eq('id', drillId);\n\n      if (error) throw error;\n\n      // Update local state\n      setDrills(drills.map(drill => \n        drill.id === drillId ? { ...drill, ...updatedData } : drill\n      ));\n\n      // Exit edit mode\n      handleCancelEdit(drillId);\n      \n      // Show success message\n      showSuccessToast('Drill updated successfully');\n    } catch (err) {\n      showErrorToast('Failed to update drill: ' + (err.message || 'Unknown error'));\n      console.error('Error updating drill:', err);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  async function confirmDelete() {\n    if (!drillToDelete) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Delete the drill (no need to delete instructions separately since they're in the same table)\n      const { error } = await supabase\n        .from('drills')\n        .delete()\n        .eq('id', drillToDelete.id);\n      \n      if (error) throw error;\n      \n      // Update the local state to remove the deleted drill\n      setDrills(drills.filter(drill => drill.id !== drillToDelete.id));\n      \n      // Show success message\n      showSuccessToast('Drill deleted successfully');\n    } catch (err) {\n      showErrorToast('Failed to delete drill: ' + (err.message || 'Unknown error'));\n      console.error('Error deleting drill:', err);\n    } finally {\n      setLoading(false);\n      setDrillToDelete(null); // Close the popup after successful deletion\n    }\n  }\n\n  async function toggleInstructions(drillId) {\n    if (expandedDrillId === drillId) {\n      setExpandedDrillId(null);\n      setEditMode({ ...editMode, [drillId]: false });\n      return;\n    }\n    \n    setExpandedDrillId(drillId);\n    \n    // If we don't have instructions for this drill yet, fetch them\n    if (!instructions[drillId]) {\n      try {\n        setLoading(true);\n        \n        // Try to fetch instructions from the drills table\n        const { data, error } = await supabase\n          .from('drills')\n          .select('id, instructions')\n          .eq('id', drillId)\n          .single();\n        \n        if (error) {\n          console.error('Error fetching instructions:', error);\n          setInstructions(prev => ({ ...prev, [drillId]: null }));\n        } else {\n          // Create an instructions object from the drill data\n          const instructionsData = {\n            drill_id: drillId,\n            instructions: data.instructions || ''\n          };\n          \n          setInstructions(prev => ({ ...prev, [drillId]: instructionsData }));\n          setEditedInstructions(prev => ({ ...prev, [drillId]: instructionsData }));\n          // Set edit mode to false for existing instructions\n          setEditMode({ ...editMode, [drillId]: false });\n        }\n      } catch (err) {\n        console.error('Error in toggleInstructions:', err);\n        setInstructions(prev => ({ ...prev, [drillId]: null }));\n      } finally {\n        setLoading(false);\n      }\n    }\n  }\n\n  // Add a new function to handle adding instructions\n  function addInstructions(drillId) {\n    // Create empty instructions object\n    const emptyInstructions = {\n      drill_id: drillId,\n      instructions: ''\n    };\n    \n    // Set the instructions and edited instructions\n    setInstructions(prev => ({ ...prev, [drillId]: emptyInstructions }));\n    setEditedInstructions(prev => ({ ...prev, [drillId]: emptyInstructions }));\n    \n    // Set edit mode to true\n    setEditMode({ ...editMode, [drillId]: true });\n  }\n\n  async function saveInstructions(drillId) {\n    if (!editedInstructions[drillId]) return;\n    \n    try {\n      setSaving(true);\n      \n      // Log the data we're trying to save\n      console.log('Saving instructions for drill:', drillId);\n      console.log('Instructions data:', editedInstructions[drillId]);\n      \n      // Save instructions directly to the drills table\n      console.log('Saving instructions to the drills table');\n      const { error: drillUpdateError } = await supabase\n        .from('drills')\n        .update({\n          instructions: editedInstructions[drillId].instructions || ''\n        })\n        .eq('id', drillId);\n      \n      if (drillUpdateError) {\n        console.error('Drill update error:', drillUpdateError);\n        throw new Error('Failed to save instructions: ' + (drillUpdateError.message || 'Unknown error'));\n      }\n      \n      // Update the instructions state with the edited instructions\n      setInstructions(prev => ({ ...prev, [drillId]: editedInstructions[drillId] }));\n      showSuccessToast('Instructions saved successfully');\n    } catch (err) {\n      console.error('Error saving instructions:', err);\n      showErrorToast('Failed to save instructions: ' + (err.message || 'Unknown error'));\n    } finally {\n      setSaving(false);\n    }\n  }\n\n  function handleInputChange(drillId, field, value) {\n    setEditedInstructions(prev => ({\n      ...prev,\n      [drillId]: {\n        ...prev[drillId],\n        [field]: value\n      }\n    }));\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-2xl font-semibold mb-6 text-orange-400\">Drill Library</h2>\n      \n      <Toast \n        message={successMessage} \n        isVisible={showToast} \n        onClose={() => setShowToast(false)} \n        type={toastType} \n      />\n      \n      {loading ? (\n        <div className=\"text-center py-8\">Loading drills...</div>\n      ) : drills.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-400\">No drills found. Add some drills to get started.</div>\n      ) : (\n        <div className=\"space-y-4\">\n          {drills.map((drill, index) => (\n            <div key={index} className=\"bg-[#2c2c2c] border border-[#3a3a3a] p-4 rounded shadow relative\">\n              <div className=\"absolute top-2 right-2 flex space-x-2\">\n                {editMode[drill.id] ? (\n                  <>\n                    <button \n                      className=\"bg-green-600 hover:bg-green-500 text-white px-2 py-1 rounded\"\n                      onClick={() => handleSaveEdit(drill.id)}\n                    >\n                      Save\n                    </button>\n                    <button \n                      className=\"bg-gray-600 hover:bg-gray-500 text-white px-2 py-1 rounded\"\n                      onClick={() => handleCancelEdit(drill.id)}\n                    >\n                      Cancel\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <button \n                      className=\"bg-blue-600 hover:bg-blue-500 text-white px-2 py-1 rounded\"\n                      onClick={() => handleStartEdit(drill)}\n                    >\n                      Edit\n                    </button>\n                    <button \n                      className=\"bg-red-600 hover:bg-red-500 text-white px-2 py-1 rounded\"\n                      onClick={() => deleteDrill(drill.id)}\n                    >\n                      Delete\n                    </button>\n                  </>\n                )}\n              </div>\n              <div className=\"p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <h3 className=\"text-lg font-semibold\">{drill.name}</h3>\n                </div>\n                <div className=\"mb-3\">\n                  <button\n                    className=\"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm\"\n                  >\n                    Video\n                  </button>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm\">\n                  <div>\n                    <span className=\"text-gray-400\">Purpose:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.purpose || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'purpose', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.purpose || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Plane:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.plane || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'plane', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.plane || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Muscles:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.muscles || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'muscles', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.muscles || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Joint Actions:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.joint_actions || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'joint_actions', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.joint_actions || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Nervous System:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.nervous_system || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'nervous_system', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.nervous_system || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Psych Components:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.psych_components || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'psych_components', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.psych_components || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Tendons Loaded:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.tendons_loaded || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'tendons_loaded', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.tendons_loaded || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Influences:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.influences || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'influences', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.influences || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Execution Needs:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.execution_needs || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'execution_needs', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.execution_needs || 'No current data.')}\n                  </div>\n                  <div>\n                    <span className=\"text-gray-400\">Regression:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"text\"\n                        value={editedDrill[drill.id]?.regression || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'regression', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                      />\n                    ) : (drill.regression || 'No current data.')}\n                  </div>\n                  <div className=\"col-span-2\">\n                    <span className=\"text-gray-400\">Notes:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <textarea\n                        value={editedDrill[drill.id]?.notes || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'notes', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                        rows=\"3\"\n                      />\n                    ) : (drill.notes || 'No current data.')}\n                  </div>\n                  <div className=\"col-span-2\">\n                    <span className=\"text-gray-400\">Video URL:</span>{' '}\n                    {editMode[drill.id] ? (\n                      <input\n                        type=\"url\"\n                        value={editedDrill[drill.id]?.video_url || ''}\n                        onChange={(e) => handleFieldEdit(drill.id, 'video_url', e.target.value)}\n                        className=\"bg-[#1e1e1e] border border-[#3a3a3a] rounded px-2 py-1 text-white w-full mt-1\"\n                        placeholder=\"https://example.com/video\"\n                      />\n                    ) : (\n                      drill.video_url ? (\n                        <a \n                          href={drill.video_url} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"text-blue-400 hover:text-blue-300 underline\"\n                        >\n                          {drill.video_url}\n                        </a>\n                      ) : 'No current data.'\n                    )}\n                  </div>\n                </div>\n                \n                {/* Instructions Section */}\n                <div className=\"mt-4 pt-4 border-t border-[#3a3a3a]\">\n                  <div className=\"flex justify-between items-center\">\n                    <button\n                      onClick={() => toggleInstructions(drill.id)}\n                      className=\"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\"\n                    >\n                      {expandedDrillId === drill.id ? 'Hide Instructions' : 'Show Instructions'}\n                    </button>\n                    \n                    {expandedDrillId === drill.id && (\n                      <button\n                        onClick={() => {\n                          if (editMode[drill.id]) {\n                            // If already in edit mode, cancel editing\n                            setEditMode({ ...editMode, [drill.id]: false });\n                          } else if (instructions[drill.id]?.instructions) {\n                            // If instructions exist, toggle edit mode\n                            setEditMode({ ...editMode, [drill.id]: true });\n                          } else {\n                            // If no instructions, add new ones\n                            addInstructions(drill.id);\n                          }\n                        }}\n                        className=\"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\"\n                      >\n                        {editMode[drill.id] ? 'Cancel Editing' : (instructions[drill.id]?.instructions ? 'Edit Instructions' : 'Add Instructions')}\n                      </button>\n                    )}\n                  </div>\n                  \n                  {expandedDrillId === drill.id && (\n                    <div className=\"mt-4\">\n                      {loading ? (\n                        <div className=\"text-center py-4\">Loading instructions...</div>\n                      ) : !instructions[drill.id] ? (\n                        <div className=\"text-center py-4 text-gray-400\">No instructions available yet.</div>\n                      ) : (\n                        <div>\n                          {!editMode[drill.id] ? (\n                            <>\n                              {/* View Mode */}\n                              <div className=\"mb-4\">\n                                <h4 className=\"text-md font-semibold text-orange-300 mb-2\">Instructions</h4>\n                                <div className=\"bg-[#1a1a1a] border border-[#3a3a3a] p-3 rounded text-white whitespace-pre-wrap\">\n                                  {instructions[drill.id]?.instructions || 'No instructions available.'}\n                                </div>\n                              </div>\n                            </>\n                          ) : (\n                            <>\n                              {/* Edit Mode */}\n                              <div className=\"mb-4\">\n                                <h4 className=\"text-md font-semibold text-orange-300 mb-2\">Instructions</h4>\n                                <textarea\n                                  className=\"w-full bg-[#1a1a1a] border border-[#3a3a3a] p-2 rounded text-white\"\n                                  rows=\"6\"\n                                  value={editedInstructions[drill.id]?.instructions || ''}\n                                  onChange={(e) => handleInputChange(drill.id, 'instructions', e.target.value)}\n                                  placeholder=\"Enter instructions for this drill...\"\n                                />\n                              </div>\n                              \n                              <div className=\"flex justify-end\">\n                                <button\n                                  onClick={() => {\n                                    saveInstructions(drill.id);\n                                    setEditMode({ ...editMode, [drill.id]: false });\n                                  }}\n                                  disabled={saving}\n                                  className=\"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\"\n                                >\n                                  {saving ? 'Saving...' : 'Save Instructions'}\n                                </button>\n                              </div>\n                            </>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Confirmation Popup */}\n      {drillToDelete && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-[#2c2c2c] p-6 rounded-lg shadow-lg max-w-md w-full\">\n            <h3 className=\"text-xl font-bold text-orange-400 mb-4\">Confirm Deletion</h3>\n            <p className=\"mb-6\">Are you sure you want to delete this drill?</p>\n            <div className=\"flex justify-end space-x-4\">\n              <button \n                className=\"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\"\n                onClick={() => setDrillToDelete(null)}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\"\n                onClick={confirmDelete}\n              >\n                Yes, Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}