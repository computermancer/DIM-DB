{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bravo\\\\Downloads\\\\BIG-DIM\\\\dim-drill-dashboard\\\\src\\\\components\\\\DrillLibrary.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../config/supabase';\nimport { Link } from 'react-router-dom';\nimport { Toast } from './Toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function DrillLibrary() {\n  _s();\n  const [drills, setDrills] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [drillToDelete, setDrillToDelete] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showToast, setShowToast] = useState(false);\n  const [toastType, setToastType] = useState('success');\n  const [expandedDrillId, setExpandedDrillId] = useState(null);\n  const [instructions, setInstructions] = useState({});\n  const [editedInstructions, setEditedInstructions] = useState({});\n  const [saving, setSaving] = useState(false);\n  const [editMode, setEditMode] = useState({});\n  const showErrorToast = message => {\n    setError(message);\n    setSuccessMessage(message);\n    setToastType('error');\n    setShowToast(true);\n  };\n  const showSuccessToast = message => {\n    setSuccessMessage(message);\n    setToastType('success');\n    setShowToast(true);\n  };\n  useEffect(() => {\n    fetchDrills();\n  }, []);\n  async function fetchDrills() {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data,\n        error\n      } = await supabase.from('drills').select('*');\n      if (error) throw error;\n      setDrills(data || []);\n    } catch (err) {\n      showErrorToast('Failed to fetch drills: ' + err.message);\n      console.error('Error fetching drills:', err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function deleteDrill(id) {\n    // Set the drill to delete, which will trigger the confirmation popup\n    setDrillToDelete(drills.find(drill => drill.id === id));\n  }\n  async function confirmDelete() {\n    if (!drillToDelete) return;\n    try {\n      setLoading(true);\n      setError(null);\n\n      // First, try to delete any associated instructions\n      try {\n        const {\n          error: instructionsError\n        } = await supabase.from('drill_instructions').delete().eq('drill_id', drillToDelete.id);\n        if (instructionsError) {\n          console.error('Error deleting drill instructions:', instructionsError);\n          // Continue with drill deletion even if instructions deletion fails\n        }\n      } catch (instructionsErr) {\n        console.error('Error deleting drill instructions:', instructionsErr);\n        // Continue with drill deletion even if instructions deletion fails\n      }\n\n      // Then delete the drill\n      const {\n        error\n      } = await supabase.from('drills').delete().eq('id', drillToDelete.id);\n      if (error) throw error;\n\n      // Update the local state to remove the deleted drill\n      setDrills(drills.filter(drill => drill.id !== drillToDelete.id));\n\n      // Show success message\n      showSuccessToast('Drill deleted successfully');\n    } catch (err) {\n      showErrorToast('Failed to delete drill: ' + (err.message || 'Unknown error'));\n      console.error('Error deleting drill:', err);\n    } finally {\n      setLoading(false);\n      setDrillToDelete(null); // Close the popup after successful deletion\n    }\n  }\n  async function toggleInstructions(drillId) {\n    if (expandedDrillId === drillId) {\n      setExpandedDrillId(null);\n      setEditMode({\n        ...editMode,\n        [drillId]: false\n      });\n      return;\n    }\n    setExpandedDrillId(drillId);\n\n    // If we don't have instructions for this drill yet, fetch them\n    if (!instructions[drillId]) {\n      try {\n        setLoading(true);\n\n        // Try to fetch instructions\n        const {\n          data,\n          error\n        } = await supabase.from('drill_instructions').select('*').eq('drill_id', drillId).single();\n        if (error) {\n          if (error.code === 'PGRST116') {\n            // Instructions not found, create empty instructions\n            try {\n              const {\n                data: newInstructions,\n                error: createError\n              } = await supabase.from('drill_instructions').insert([{\n                drill_id: drillId,\n                instructions: '',\n                steps: '',\n                tips: '',\n                common_mistakes: '',\n                safety_notes: ''\n              }]).select().single();\n              if (createError) {\n                console.error('Error creating empty instructions:', createError);\n                // If the table doesn't exist, we'll just show an empty form\n                setInstructions(prev => ({\n                  ...prev,\n                  [drillId]: {\n                    drill_id: drillId,\n                    instructions: '',\n                    steps: '',\n                    tips: '',\n                    common_mistakes: '',\n                    safety_notes: ''\n                  }\n                }));\n                setEditedInstructions(prev => ({\n                  ...prev,\n                  [drillId]: {\n                    drill_id: drillId,\n                    instructions: '',\n                    steps: '',\n                    tips: '',\n                    common_mistakes: '',\n                    safety_notes: ''\n                  }\n                }));\n                // Set edit mode to true for new instructions\n                setEditMode({\n                  ...editMode,\n                  [drillId]: true\n                });\n              } else {\n                setInstructions(prev => ({\n                  ...prev,\n                  [drillId]: newInstructions\n                }));\n                setEditedInstructions(prev => ({\n                  ...prev,\n                  [drillId]: newInstructions\n                }));\n                // Set edit mode to true for new instructions\n                setEditMode({\n                  ...editMode,\n                  [drillId]: true\n                });\n              }\n            } catch (createErr) {\n              console.error('Error creating instructions:', createErr);\n              // If there's an error creating instructions, we'll just show an empty form\n              setInstructions(prev => ({\n                ...prev,\n                [drillId]: {\n                  drill_id: drillId,\n                  instructions: '',\n                  steps: '',\n                  tips: '',\n                  common_mistakes: '',\n                  safety_notes: ''\n                }\n              }));\n              setEditedInstructions(prev => ({\n                ...prev,\n                [drillId]: {\n                  drill_id: drillId,\n                  instructions: '',\n                  steps: '',\n                  tips: '',\n                  common_mistakes: '',\n                  safety_notes: ''\n                }\n              }));\n              // Set edit mode to true for new instructions\n              setEditMode({\n                ...editMode,\n                [drillId]: true\n              });\n            }\n          } else {\n            console.error('Error fetching instructions:', error);\n            setInstructions(prev => ({\n              ...prev,\n              [drillId]: null\n            }));\n          }\n        } else {\n          setInstructions(prev => ({\n            ...prev,\n            [drillId]: data\n          }));\n          setEditedInstructions(prev => ({\n            ...prev,\n            [drillId]: data\n          }));\n          // Set edit mode to false for existing instructions\n          setEditMode({\n            ...editMode,\n            [drillId]: false\n          });\n        }\n      } catch (err) {\n        console.error('Error in toggleInstructions:', err);\n        setInstructions(prev => ({\n          ...prev,\n          [drillId]: null\n        }));\n      } finally {\n        setLoading(false);\n      }\n    }\n  }\n\n  // Add a new function to handle adding instructions\n  function addInstructions(drillId) {\n    // Create empty instructions object\n    const emptyInstructions = {\n      drill_id: drillId,\n      instructions: ''\n    };\n\n    // Set the instructions and edited instructions\n    setInstructions(prev => ({\n      ...prev,\n      [drillId]: emptyInstructions\n    }));\n    setEditedInstructions(prev => ({\n      ...prev,\n      [drillId]: emptyInstructions\n    }));\n\n    // Set edit mode to true\n    setEditMode({\n      ...editMode,\n      [drillId]: true\n    });\n  }\n  async function saveInstructions(drillId) {\n    if (!editedInstructions[drillId]) return;\n    try {\n      setSaving(true);\n\n      // First, try to update the instructions\n      const {\n        error: updateError\n      } = await supabase.from('drill_instructions').update(editedInstructions[drillId]).eq('drill_id', drillId);\n      if (updateError) {\n        console.error('Update error:', updateError);\n\n        // If update fails, try to insert the instructions\n        if (updateError.code === 'PGRST116' || updateError.code === '42P01') {\n          // Record not found or table doesn't exist, try to insert\n          const {\n            data: insertData,\n            error: insertError\n          } = await supabase.from('drill_instructions').insert([{\n            drill_id: drillId,\n            instructions: editedInstructions[drillId].instructions || ''\n          }]).select();\n          if (insertError) {\n            console.error('Insert error:', insertError);\n            throw new Error('Failed to save instructions: ' + (insertError.message || 'Unknown error'));\n          }\n\n          // Update the instructions state with the inserted data\n          if (insertData && insertData.length > 0) {\n            setInstructions(prev => ({\n              ...prev,\n              [drillId]: insertData[0]\n            }));\n          }\n        } else {\n          throw new Error('Failed to update instructions: ' + (updateError.message || 'Unknown error'));\n        }\n      } else {\n        // Update the instructions state with the edited instructions\n        setInstructions(prev => ({\n          ...prev,\n          [drillId]: editedInstructions[drillId]\n        }));\n      }\n\n      // Show success message\n      showSuccessToast('Instructions saved successfully');\n    } catch (err) {\n      console.error('Error saving instructions:', err);\n      showErrorToast('Failed to save instructions: ' + (err.message || 'Unknown error'));\n    } finally {\n      setSaving(false);\n    }\n  }\n  function handleInputChange(drillId, field, value) {\n    setEditedInstructions(prev => ({\n      ...prev,\n      [drillId]: {\n        ...prev[drillId],\n        [field]: value\n      }\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6 text-orange-400\",\n      children: \"Drill Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      message: successMessage,\n      isVisible: showToast,\n      onClose: () => setShowToast(false),\n      type: toastType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: \"Loading drills...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this) : drills.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-400\",\n      children: \"No drills found. Add some drills to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: drills.map((drill, index) => {\n        var _instructions$drill$i2, _instructions$drill$i3, _editedInstructions$d;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-[#2c2c2c] border border-[#3a3a3a] p-4 rounded shadow relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-600 hover:bg-red-500 text-white px-2 py-1 rounded absolute top-2 right-2\",\n            onClick: () => deleteDrill(drill.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-orange-300\",\n                children: drill.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm\",\n              children: [drill.purpose && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Purpose:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this), \" \", drill.purpose]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), drill.plane && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Plane:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this), \" \", drill.plane]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), drill.muscles && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Muscles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), \" \", drill.muscles]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), drill.joint_actions && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Joint Actions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 23\n                }, this), \" \", drill.joint_actions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this), drill.nervous_system && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Nervous System:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this), \" \", drill.nervous_system]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), drill.psych_components && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Psych Components:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this), \" \", drill.psych_components]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this), drill.tendons_loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Tendons Loaded:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 23\n                }, this), \" \", drill.tendons_loaded]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), drill.influences && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Influences:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this), \" \", drill.influences]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), drill.execution_needs && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Execution Needs:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this), \" \", drill.execution_needs]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this), drill.regression && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Regression:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this), \" \", drill.regression]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), drill.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-span-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: \"Notes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 23\n                }, this), \" \", drill.notes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 pt-4 border-t border-[#3a3a3a]\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleInstructions(drill.id),\n                  className: \"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\",\n                  children: expandedDrillId === drill.id ? 'Hide Instructions' : 'Show Instructions'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this), expandedDrillId === drill.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    var _instructions$drill$i;\n                    if (editMode[drill.id]) {\n                      // If already in edit mode, cancel editing\n                      setEditMode({\n                        ...editMode,\n                        [drill.id]: false\n                      });\n                    } else if ((_instructions$drill$i = instructions[drill.id]) !== null && _instructions$drill$i !== void 0 && _instructions$drill$i.instructions) {\n                      // If instructions exist, toggle edit mode\n                      setEditMode({\n                        ...editMode,\n                        [drill.id]: true\n                      });\n                    } else {\n                      // If no instructions, add new ones\n                      addInstructions(drill.id);\n                    }\n                  },\n                  className: \"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\",\n                  children: editMode[drill.id] ? 'Cancel Editing' : (_instructions$drill$i2 = instructions[drill.id]) !== null && _instructions$drill$i2 !== void 0 && _instructions$drill$i2.instructions ? 'Edit Instructions' : 'Add Instructions'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), expandedDrillId === drill.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center py-4\",\n                  children: \"Loading instructions...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 25\n                }, this) : !instructions[drill.id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center py-4 text-gray-400\",\n                  children: \"No instructions available yet.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: !editMode[drill.id] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-md font-semibold text-orange-300 mb-2\",\n                        children: \"Instructions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-[#1a1a1a] border border-[#3a3a3a] p-3 rounded text-white whitespace-pre-wrap\",\n                        children: ((_instructions$drill$i3 = instructions[drill.id]) === null || _instructions$drill$i3 === void 0 ? void 0 : _instructions$drill$i3.instructions) || 'No instructions available.'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"text-md font-semibold text-orange-300 mb-2\",\n                        children: \"Instructions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 429,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        className: \"w-full bg-[#1a1a1a] border border-[#3a3a3a] p-2 rounded text-white\",\n                        rows: \"6\",\n                        value: ((_editedInstructions$d = editedInstructions[drill.id]) === null || _editedInstructions$d === void 0 ? void 0 : _editedInstructions$d.instructions) || '',\n                        onChange: e => handleInputChange(drill.id, 'instructions', e.target.value),\n                        placeholder: \"Enter instructions for this drill...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 430,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-end\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          saveInstructions(drill.id);\n                          setEditMode({\n                            ...editMode,\n                            [drill.id]: false\n                          });\n                        },\n                        disabled: saving,\n                        className: \"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\",\n                        children: saving ? 'Saving...' : 'Save Instructions'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), drillToDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#2c2c2c] p-6 rounded-lg shadow-lg max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-orange-400 mb-4\",\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6\",\n          children: \"Are you sure you want to delete this drill?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\",\n            onClick: () => setDrillToDelete(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\",\n            onClick: confirmDelete,\n            children: \"Yes, Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(DrillLibrary, \"aIbwigdI9VHg79ZKXw1ZumaHt8w=\");\n_c = DrillLibrary;\nvar _c;\n$RefreshReg$(_c, \"DrillLibrary\");","map":{"version":3,"names":["useState","useEffect","supabase","Link","Toast","jsxDEV","_jsxDEV","Fragment","_Fragment","DrillLibrary","_s","drills","setDrills","error","setError","loading","setLoading","drillToDelete","setDrillToDelete","successMessage","setSuccessMessage","showToast","setShowToast","toastType","setToastType","expandedDrillId","setExpandedDrillId","instructions","setInstructions","editedInstructions","setEditedInstructions","saving","setSaving","editMode","setEditMode","showErrorToast","message","showSuccessToast","fetchDrills","data","from","select","err","console","deleteDrill","id","find","drill","confirmDelete","instructionsError","delete","eq","instructionsErr","filter","toggleInstructions","drillId","single","code","newInstructions","createError","insert","drill_id","steps","tips","common_mistakes","safety_notes","prev","createErr","addInstructions","emptyInstructions","saveInstructions","updateError","update","insertData","insertError","Error","length","handleInputChange","field","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isVisible","onClose","type","map","index","_instructions$drill$i2","_instructions$drill$i3","_editedInstructions$d","onClick","name","purpose","plane","muscles","joint_actions","nervous_system","psych_components","tendons_loaded","influences","execution_needs","regression","notes","_instructions$drill$i","rows","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bravo/Downloads/BIG-DIM/dim-drill-dashboard/src/components/DrillLibrary.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { supabase } from '../config/supabase';\r\nimport { Link } from 'react-router-dom';\r\nimport { Toast } from './Toast';\r\n\r\nexport function DrillLibrary() {\r\n  const [drills, setDrills] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [drillToDelete, setDrillToDelete] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [toastType, setToastType] = useState('success');\r\n  const [expandedDrillId, setExpandedDrillId] = useState(null);\r\n  const [instructions, setInstructions] = useState({});\r\n  const [editedInstructions, setEditedInstructions] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [editMode, setEditMode] = useState({});\r\n\r\n  const showErrorToast = (message) => {\r\n    setError(message);\r\n    setSuccessMessage(message);\r\n    setToastType('error');\r\n    setShowToast(true);\r\n  };\r\n\r\n  const showSuccessToast = (message) => {\r\n    setSuccessMessage(message);\r\n    setToastType('success');\r\n    setShowToast(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDrills();\r\n  }, []);\r\n\r\n  async function fetchDrills() {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { data, error } = await supabase.from('drills').select('*');\r\n      if (error) throw error;\r\n      setDrills(data || []);\r\n    } catch (err) {\r\n      showErrorToast('Failed to fetch drills: ' + err.message);\r\n      console.error('Error fetching drills:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function deleteDrill(id) {\r\n    // Set the drill to delete, which will trigger the confirmation popup\r\n    setDrillToDelete(drills.find(drill => drill.id === id));\r\n  }\r\n\r\n  async function confirmDelete() {\r\n    if (!drillToDelete) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // First, try to delete any associated instructions\r\n      try {\r\n        const { error: instructionsError } = await supabase\r\n          .from('drill_instructions')\r\n          .delete()\r\n          .eq('drill_id', drillToDelete.id);\r\n        \r\n        if (instructionsError) {\r\n          console.error('Error deleting drill instructions:', instructionsError);\r\n          // Continue with drill deletion even if instructions deletion fails\r\n        }\r\n      } catch (instructionsErr) {\r\n        console.error('Error deleting drill instructions:', instructionsErr);\r\n        // Continue with drill deletion even if instructions deletion fails\r\n      }\r\n      \r\n      // Then delete the drill\r\n      const { error } = await supabase\r\n        .from('drills')\r\n        .delete()\r\n        .eq('id', drillToDelete.id);\r\n      \r\n      if (error) throw error;\r\n      \r\n      // Update the local state to remove the deleted drill\r\n      setDrills(drills.filter(drill => drill.id !== drillToDelete.id));\r\n      \r\n      // Show success message\r\n      showSuccessToast('Drill deleted successfully');\r\n    } catch (err) {\r\n      showErrorToast('Failed to delete drill: ' + (err.message || 'Unknown error'));\r\n      console.error('Error deleting drill:', err);\r\n    } finally {\r\n      setLoading(false);\r\n      setDrillToDelete(null); // Close the popup after successful deletion\r\n    }\r\n  }\r\n\r\n  async function toggleInstructions(drillId) {\r\n    if (expandedDrillId === drillId) {\r\n      setExpandedDrillId(null);\r\n      setEditMode({ ...editMode, [drillId]: false });\r\n      return;\r\n    }\r\n    \r\n    setExpandedDrillId(drillId);\r\n    \r\n    // If we don't have instructions for this drill yet, fetch them\r\n    if (!instructions[drillId]) {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Try to fetch instructions\r\n        const { data, error } = await supabase\r\n          .from('drill_instructions')\r\n          .select('*')\r\n          .eq('drill_id', drillId)\r\n          .single();\r\n        \r\n        if (error) {\r\n          if (error.code === 'PGRST116') {\r\n            // Instructions not found, create empty instructions\r\n            try {\r\n              const { data: newInstructions, error: createError } = await supabase\r\n                .from('drill_instructions')\r\n                .insert([\r\n                  {\r\n                    drill_id: drillId,\r\n                    instructions: '',\r\n                    steps: '',\r\n                    tips: '',\r\n                    common_mistakes: '',\r\n                    safety_notes: ''\r\n                  }\r\n                ])\r\n                .select()\r\n                .single();\r\n              \r\n              if (createError) {\r\n                console.error('Error creating empty instructions:', createError);\r\n                // If the table doesn't exist, we'll just show an empty form\r\n                setInstructions(prev => ({ ...prev, [drillId]: {\r\n                  drill_id: drillId,\r\n                  instructions: '',\r\n                  steps: '',\r\n                  tips: '',\r\n                  common_mistakes: '',\r\n                  safety_notes: ''\r\n                }}));\r\n                setEditedInstructions(prev => ({ ...prev, [drillId]: {\r\n                  drill_id: drillId,\r\n                  instructions: '',\r\n                  steps: '',\r\n                  tips: '',\r\n                  common_mistakes: '',\r\n                  safety_notes: ''\r\n                }}));\r\n                // Set edit mode to true for new instructions\r\n                setEditMode({ ...editMode, [drillId]: true });\r\n              } else {\r\n                setInstructions(prev => ({ ...prev, [drillId]: newInstructions }));\r\n                setEditedInstructions(prev => ({ ...prev, [drillId]: newInstructions }));\r\n                // Set edit mode to true for new instructions\r\n                setEditMode({ ...editMode, [drillId]: true });\r\n              }\r\n            } catch (createErr) {\r\n              console.error('Error creating instructions:', createErr);\r\n              // If there's an error creating instructions, we'll just show an empty form\r\n              setInstructions(prev => ({ ...prev, [drillId]: {\r\n                drill_id: drillId,\r\n                instructions: '',\r\n                steps: '',\r\n                tips: '',\r\n                common_mistakes: '',\r\n                safety_notes: ''\r\n              }}));\r\n              setEditedInstructions(prev => ({ ...prev, [drillId]: {\r\n                drill_id: drillId,\r\n                instructions: '',\r\n                steps: '',\r\n                tips: '',\r\n                common_mistakes: '',\r\n                safety_notes: ''\r\n              }}));\r\n              // Set edit mode to true for new instructions\r\n              setEditMode({ ...editMode, [drillId]: true });\r\n            }\r\n          } else {\r\n            console.error('Error fetching instructions:', error);\r\n            setInstructions(prev => ({ ...prev, [drillId]: null }));\r\n          }\r\n        } else {\r\n          setInstructions(prev => ({ ...prev, [drillId]: data }));\r\n          setEditedInstructions(prev => ({ ...prev, [drillId]: data }));\r\n          // Set edit mode to false for existing instructions\r\n          setEditMode({ ...editMode, [drillId]: false });\r\n        }\r\n      } catch (err) {\r\n        console.error('Error in toggleInstructions:', err);\r\n        setInstructions(prev => ({ ...prev, [drillId]: null }));\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add a new function to handle adding instructions\r\n  function addInstructions(drillId) {\r\n    // Create empty instructions object\r\n    const emptyInstructions = {\r\n      drill_id: drillId,\r\n      instructions: ''\r\n    };\r\n    \r\n    // Set the instructions and edited instructions\r\n    setInstructions(prev => ({ ...prev, [drillId]: emptyInstructions }));\r\n    setEditedInstructions(prev => ({ ...prev, [drillId]: emptyInstructions }));\r\n    \r\n    // Set edit mode to true\r\n    setEditMode({ ...editMode, [drillId]: true });\r\n  }\r\n\r\n  async function saveInstructions(drillId) {\r\n    if (!editedInstructions[drillId]) return;\r\n    \r\n    try {\r\n      setSaving(true);\r\n      \r\n      // First, try to update the instructions\r\n      const { error: updateError } = await supabase\r\n        .from('drill_instructions')\r\n        .update(editedInstructions[drillId])\r\n        .eq('drill_id', drillId);\r\n      \r\n      if (updateError) {\r\n        console.error('Update error:', updateError);\r\n        \r\n        // If update fails, try to insert the instructions\r\n        if (updateError.code === 'PGRST116' || updateError.code === '42P01') {\r\n          // Record not found or table doesn't exist, try to insert\r\n          const { data: insertData, error: insertError } = await supabase\r\n            .from('drill_instructions')\r\n            .insert([{\r\n              drill_id: drillId,\r\n              instructions: editedInstructions[drillId].instructions || ''\r\n            }])\r\n            .select();\r\n          \r\n          if (insertError) {\r\n            console.error('Insert error:', insertError);\r\n            throw new Error('Failed to save instructions: ' + (insertError.message || 'Unknown error'));\r\n          }\r\n          \r\n          // Update the instructions state with the inserted data\r\n          if (insertData && insertData.length > 0) {\r\n            setInstructions(prev => ({ ...prev, [drillId]: insertData[0] }));\r\n          }\r\n        } else {\r\n          throw new Error('Failed to update instructions: ' + (updateError.message || 'Unknown error'));\r\n        }\r\n      } else {\r\n        // Update the instructions state with the edited instructions\r\n        setInstructions(prev => ({ ...prev, [drillId]: editedInstructions[drillId] }));\r\n      }\r\n      \r\n      // Show success message\r\n      showSuccessToast('Instructions saved successfully');\r\n    } catch (err) {\r\n      console.error('Error saving instructions:', err);\r\n      showErrorToast('Failed to save instructions: ' + (err.message || 'Unknown error'));\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }\r\n\r\n  function handleInputChange(drillId, field, value) {\r\n    setEditedInstructions(prev => ({\r\n      ...prev,\r\n      [drillId]: {\r\n        ...prev[drillId],\r\n        [field]: value\r\n      }\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-semibold mb-6 text-orange-400\">Drill Library</h2>\r\n      \r\n      <Toast \r\n        message={successMessage} \r\n        isVisible={showToast} \r\n        onClose={() => setShowToast(false)} \r\n        type={toastType} \r\n      />\r\n      \r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading drills...</div>\r\n      ) : drills.length === 0 ? (\r\n        <div className=\"text-center py-8 text-gray-400\">No drills found. Add some drills to get started.</div>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          {drills.map((drill, index) => (\r\n            <div key={index} className=\"bg-[#2c2c2c] border border-[#3a3a3a] p-4 rounded shadow relative\">\r\n              <button \r\n                className=\"bg-red-600 hover:bg-red-500 text-white px-2 py-1 rounded absolute top-2 right-2\"\r\n                onClick={() => deleteDrill(drill.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <div className=\"p-4\">\r\n                <div className=\"mb-2\">\r\n                  <h3 className=\"text-lg font-semibold text-orange-300\">{drill.name}</h3>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm\">\r\n                  {drill.purpose && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Purpose:</span> {drill.purpose}\r\n                    </div>\r\n                  )}\r\n                  {drill.plane && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Plane:</span> {drill.plane}\r\n                    </div>\r\n                  )}\r\n                  {drill.muscles && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Muscles:</span> {drill.muscles}\r\n                    </div>\r\n                  )}\r\n                  {drill.joint_actions && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Joint Actions:</span> {drill.joint_actions}\r\n                    </div>\r\n                  )}\r\n                  {drill.nervous_system && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Nervous System:</span> {drill.nervous_system}\r\n                    </div>\r\n                  )}\r\n                  {drill.psych_components && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Psych Components:</span> {drill.psych_components}\r\n                    </div>\r\n                  )}\r\n                  {drill.tendons_loaded && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Tendons Loaded:</span> {drill.tendons_loaded}\r\n                    </div>\r\n                  )}\r\n                  {drill.influences && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Influences:</span> {drill.influences}\r\n                    </div>\r\n                  )}\r\n                  {drill.execution_needs && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Execution Needs:</span> {drill.execution_needs}\r\n                    </div>\r\n                  )}\r\n                  {drill.regression && (\r\n                    <div>\r\n                      <span className=\"text-gray-400\">Regression:</span> {drill.regression}\r\n                    </div>\r\n                  )}\r\n                  {drill.notes && (\r\n                    <div className=\"col-span-2\">\r\n                      <span className=\"text-gray-400\">Notes:</span> {drill.notes}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Instructions Section */}\r\n                <div className=\"mt-4 pt-4 border-t border-[#3a3a3a]\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <button\r\n                      onClick={() => toggleInstructions(drill.id)}\r\n                      className=\"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\"\r\n                    >\r\n                      {expandedDrillId === drill.id ? 'Hide Instructions' : 'Show Instructions'}\r\n                    </button>\r\n                    \r\n                    {expandedDrillId === drill.id && (\r\n                      <button\r\n                        onClick={() => {\r\n                          if (editMode[drill.id]) {\r\n                            // If already in edit mode, cancel editing\r\n                            setEditMode({ ...editMode, [drill.id]: false });\r\n                          } else if (instructions[drill.id]?.instructions) {\r\n                            // If instructions exist, toggle edit mode\r\n                            setEditMode({ ...editMode, [drill.id]: true });\r\n                          } else {\r\n                            // If no instructions, add new ones\r\n                            addInstructions(drill.id);\r\n                          }\r\n                        }}\r\n                        className=\"bg-blue-600 hover:bg-blue-500 text-white px-3 py-1 rounded text-sm inline-block\"\r\n                      >\r\n                        {editMode[drill.id] ? 'Cancel Editing' : (instructions[drill.id]?.instructions ? 'Edit Instructions' : 'Add Instructions')}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {expandedDrillId === drill.id && (\r\n                    <div className=\"mt-4\">\r\n                      {loading ? (\r\n                        <div className=\"text-center py-4\">Loading instructions...</div>\r\n                      ) : !instructions[drill.id] ? (\r\n                        <div className=\"text-center py-4 text-gray-400\">No instructions available yet.</div>\r\n                      ) : (\r\n                        <div>\r\n                          {!editMode[drill.id] ? (\r\n                            <>\r\n                              {/* View Mode */}\r\n                              <div className=\"mb-4\">\r\n                                <h4 className=\"text-md font-semibold text-orange-300 mb-2\">Instructions</h4>\r\n                                <div className=\"bg-[#1a1a1a] border border-[#3a3a3a] p-3 rounded text-white whitespace-pre-wrap\">\r\n                                  {instructions[drill.id]?.instructions || 'No instructions available.'}\r\n                                </div>\r\n                              </div>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {/* Edit Mode */}\r\n                              <div className=\"mb-4\">\r\n                                <h4 className=\"text-md font-semibold text-orange-300 mb-2\">Instructions</h4>\r\n                                <textarea\r\n                                  className=\"w-full bg-[#1a1a1a] border border-[#3a3a3a] p-2 rounded text-white\"\r\n                                  rows=\"6\"\r\n                                  value={editedInstructions[drill.id]?.instructions || ''}\r\n                                  onChange={(e) => handleInputChange(drill.id, 'instructions', e.target.value)}\r\n                                  placeholder=\"Enter instructions for this drill...\"\r\n                                />\r\n                              </div>\r\n                              \r\n                              <div className=\"flex justify-end\">\r\n                                <button\r\n                                  onClick={() => {\r\n                                    saveInstructions(drill.id);\r\n                                    setEditMode({ ...editMode, [drill.id]: false });\r\n                                  }}\r\n                                  disabled={saving}\r\n                                  className=\"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\"\r\n                                >\r\n                                  {saving ? 'Saving...' : 'Save Instructions'}\r\n                                </button>\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirmation Popup */}\r\n      {drillToDelete && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#2c2c2c] p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n            <h3 className=\"text-xl font-bold text-orange-400 mb-4\">Confirm Deletion</h3>\r\n            <p className=\"mb-6\">Are you sure you want to delete this drill?</p>\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button \r\n                className=\"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\"\r\n                onClick={() => setDrillToDelete(null)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                className=\"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\"\r\n                onClick={confirmDelete}\r\n              >\r\n                Yes, Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}