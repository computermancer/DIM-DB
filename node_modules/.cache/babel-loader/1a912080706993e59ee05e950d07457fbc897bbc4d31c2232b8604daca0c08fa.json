{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bravo\\\\Downloads\\\\BIG-DIM\\\\dim-drill-dashboard\\\\src\\\\components\\\\DrillDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from '../config/supabase';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DrillDashboard() {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [newDrill, setNewDrill] = useState({\n    name: '',\n    purpose: '',\n    plane: '',\n    muscles: '',\n    joint_actions: '',\n    nervous_system: '',\n    psych_components: '',\n    tendons_loaded: '',\n    influences: '',\n    execution_needs: '',\n    regression: '',\n    notes: '',\n    instructions: ''\n  });\n  const [textBlock, setTextBlock] = useState('');\n  const navigate = useNavigate();\n  async function addDrill(e) {\n    e.preventDefault();\n    if (!newDrill.name) {\n      setError('Drill name is required');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Clean up the drill data - remove empty strings\n      const cleanDrillData = {};\n      Object.keys(newDrill).forEach(key => {\n        if (newDrill[key] && newDrill[key].trim() !== '') {\n          cleanDrillData[key] = newDrill[key];\n        }\n      });\n\n      // Add empty instructions fields directly to the drill\n      cleanDrillData.instructions_steps = [];\n      cleanDrillData.instructions_tips = '';\n      cleanDrillData.instructions_common_mistakes = '';\n      cleanDrillData.instructions_safety_notes = '';\n\n      // Insert the drill into the drills table\n      const {\n        data,\n        error\n      } = await supabase.from('drills').insert([cleanDrillData]).select();\n      if (error) {\n        console.error('Supabase error:', error);\n        throw new Error(error.message || 'Failed to add drill to database');\n      }\n      if (!data || data.length === 0) {\n        throw new Error('No data returned after adding drill');\n      }\n\n      // Try to create instructions in the drill_instructions table if it exists\n      try {\n        const {\n          error: instructionsError\n        } = await supabase.from('drill_instructions').insert([{\n          drill_id: data[0].id,\n          instructions: '',\n          steps: [],\n          tips: '',\n          common_mistakes: '',\n          safety_notes: ''\n        }]);\n        if (instructionsError) {\n          console.log('Note: drill_instructions table may not exist:', instructionsError.message);\n          // Continue anyway - we've already added the instructions fields to the drill\n        }\n      } catch (instructionsErr) {\n        console.log('Note: Could not create drill_instructions entry:', instructionsErr.message);\n        // Continue anyway - we've already added the instructions fields to the drill\n      }\n\n      // Reset form and navigate to drill library\n      setNewDrill({\n        name: '',\n        purpose: '',\n        plane: '',\n        muscles: '',\n        joint_actions: '',\n        nervous_system: '',\n        psych_components: '',\n        tendons_loaded: '',\n        influences: '',\n        execution_needs: '',\n        regression: '',\n        notes: '',\n        instructions: ''\n      });\n      setTextBlock('');\n      navigate('/drill-library');\n    } catch (err) {\n      console.error('Error in addDrill:', err);\n      setError('Failed to add drill: ' + (err.message || 'Unknown error'));\n    } finally {\n      setLoading(false);\n    }\n  }\n  function handleInputChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewDrill({\n      ...newDrill,\n      [name]: value\n    });\n  }\n  function parseTextBlock() {\n    if (!textBlock.trim()) {\n      setError('Please paste a drill block to parse');\n      return;\n    }\n    try {\n      // Simple parsing logic - can be enhanced based on actual format\n      const lines = textBlock.split('\\n');\n      const parsedDrill = {\n        ...newDrill\n      };\n      lines.forEach(line => {\n        const [key, ...valueParts] = line.split(':');\n        const value = valueParts.join(':').trim();\n        if (key && value) {\n          const normalizedKey = key.toLowerCase().trim().replace(/\\s+/g, '_');\n          if (normalizedKey in parsedDrill) {\n            parsedDrill[normalizedKey] = value;\n          }\n        }\n      });\n      setNewDrill(parsedDrill);\n      setError(null);\n    } catch (err) {\n      setError('Failed to parse drill block: ' + err.message);\n      console.error('Error parsing drill block:', err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6 text-orange-400\",\n      children: \"Add New Drill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-500 text-white p-4 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium mb-2 text-blue-400\",\n        children: \"Paste Full Drill Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-40\",\n        value: textBlock,\n        onChange: e => setTextBlock(e.target.value),\n        placeholder: \"Paste your drill block here (format: Key: Value, one per line)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded\",\n        onClick: parseTextBlock,\n        children: \"Parse Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addDrill,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Purpose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"purpose\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.purpose,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Plane\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"plane\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.plane,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Muscles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"muscles\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.muscles,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Joint Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"joint_actions\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.joint_actions,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Nervous System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nervous_system\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.nervous_system,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Psych Components\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"psych_components\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.psych_components,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Tendons Loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tendons_loaded\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.tendons_loaded,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Influences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"influences\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.influences,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Execution Needs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"execution_needs\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.execution_needs,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Regression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"regression\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\",\n          value: newDrill.regression,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"notes\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-24\",\n          value: newDrill.notes,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-2 text-gray-300\",\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"instructions\",\n          className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-32\",\n          value: newDrill.instructions,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-green-600 hover:bg-green-500 text-white px-6 py-3 rounded font-medium\",\n        disabled: loading,\n        children: loading ? 'Adding...' : 'Add Drill'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(DrillDashboard, \"Hu55mvAVAel6OW2q22KDLxnMcDw=\", false, function () {\n  return [useNavigate];\n});\n_c = DrillDashboard;\nvar _c;\n$RefreshReg$(_c, \"DrillDashboard\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","DrillDashboard","_s","error","setError","loading","setLoading","newDrill","setNewDrill","name","purpose","plane","muscles","joint_actions","nervous_system","psych_components","tendons_loaded","influences","execution_needs","regression","notes","instructions","textBlock","setTextBlock","navigate","addDrill","e","preventDefault","cleanDrillData","Object","keys","forEach","key","trim","instructions_steps","instructions_tips","instructions_common_mistakes","instructions_safety_notes","data","from","insert","select","console","Error","message","length","instructionsError","drill_id","id","steps","tips","common_mistakes","safety_notes","log","instructionsErr","err","handleInputChange","value","target","parseTextBlock","lines","split","parsedDrill","line","valueParts","join","normalizedKey","toLowerCase","replace","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","onSubmit","type","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bravo/Downloads/BIG-DIM/dim-drill-dashboard/src/components/DrillDashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { supabase } from '../config/supabase';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport function DrillDashboard() {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newDrill, setNewDrill] = useState({\r\n    name: '',\r\n    purpose: '',\r\n    plane: '',\r\n    muscles: '',\r\n    joint_actions: '',\r\n    nervous_system: '',\r\n    psych_components: '',\r\n    tendons_loaded: '',\r\n    influences: '',\r\n    execution_needs: '',\r\n    regression: '',\r\n    notes: '',\r\n    instructions: ''\r\n  });\r\n  const [textBlock, setTextBlock] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  async function addDrill(e) {\r\n    e.preventDefault();\r\n    \r\n    if (!newDrill.name) {\r\n      setError('Drill name is required');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Clean up the drill data - remove empty strings\r\n      const cleanDrillData = {};\r\n      Object.keys(newDrill).forEach(key => {\r\n        if (newDrill[key] && newDrill[key].trim() !== '') {\r\n          cleanDrillData[key] = newDrill[key];\r\n        }\r\n      });\r\n      \r\n      // Add empty instructions fields directly to the drill\r\n      cleanDrillData.instructions_steps = [];\r\n      cleanDrillData.instructions_tips = '';\r\n      cleanDrillData.instructions_common_mistakes = '';\r\n      cleanDrillData.instructions_safety_notes = '';\r\n      \r\n      // Insert the drill into the drills table\r\n      const { data, error } = await supabase\r\n        .from('drills')\r\n        .insert([cleanDrillData])\r\n        .select();\r\n      \r\n      if (error) {\r\n        console.error('Supabase error:', error);\r\n        throw new Error(error.message || 'Failed to add drill to database');\r\n      }\r\n      \r\n      if (!data || data.length === 0) {\r\n        throw new Error('No data returned after adding drill');\r\n      }\r\n      \r\n      // Try to create instructions in the drill_instructions table if it exists\r\n      try {\r\n        const { error: instructionsError } = await supabase\r\n          .from('drill_instructions')\r\n          .insert([\r\n            { \r\n              drill_id: data[0].id,\r\n              instructions: '',\r\n              steps: [],\r\n              tips: '',\r\n              common_mistakes: '',\r\n              safety_notes: ''\r\n            }\r\n          ]);\r\n        \r\n        if (instructionsError) {\r\n          console.log('Note: drill_instructions table may not exist:', instructionsError.message);\r\n          // Continue anyway - we've already added the instructions fields to the drill\r\n        }\r\n      } catch (instructionsErr) {\r\n        console.log('Note: Could not create drill_instructions entry:', instructionsErr.message);\r\n        // Continue anyway - we've already added the instructions fields to the drill\r\n      }\r\n      \r\n      // Reset form and navigate to drill library\r\n      setNewDrill({\r\n        name: '',\r\n        purpose: '',\r\n        plane: '',\r\n        muscles: '',\r\n        joint_actions: '',\r\n        nervous_system: '',\r\n        psych_components: '',\r\n        tendons_loaded: '',\r\n        influences: '',\r\n        execution_needs: '',\r\n        regression: '',\r\n        notes: '',\r\n        instructions: ''\r\n      });\r\n      setTextBlock('');\r\n      navigate('/drill-library');\r\n    } catch (err) {\r\n      console.error('Error in addDrill:', err);\r\n      setError('Failed to add drill: ' + (err.message || 'Unknown error'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleInputChange(e) {\r\n    const { name, value } = e.target;\r\n    setNewDrill({\r\n      ...newDrill,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  function parseTextBlock() {\r\n    if (!textBlock.trim()) {\r\n      setError('Please paste a drill block to parse');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Simple parsing logic - can be enhanced based on actual format\r\n      const lines = textBlock.split('\\n');\r\n      const parsedDrill = { ...newDrill };\r\n      \r\n      lines.forEach(line => {\r\n        const [key, ...valueParts] = line.split(':');\r\n        const value = valueParts.join(':').trim();\r\n        \r\n        if (key && value) {\r\n          const normalizedKey = key.toLowerCase().trim().replace(/\\s+/g, '_');\r\n          if (normalizedKey in parsedDrill) {\r\n            parsedDrill[normalizedKey] = value;\r\n          }\r\n        }\r\n      });\r\n      \r\n      setNewDrill(parsedDrill);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to parse drill block: ' + err.message);\r\n      console.error('Error parsing drill block:', err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-semibold mb-6 text-orange-400\">Add New Drill</h2>\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-500 text-white p-4 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mb-6\">\r\n        <h3 className=\"text-lg font-medium mb-2 text-blue-400\">Paste Full Drill Block</h3>\r\n        <textarea\r\n          className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-40\"\r\n          value={textBlock}\r\n          onChange={(e) => setTextBlock(e.target.value)}\r\n          placeholder=\"Paste your drill block here (format: Key: Value, one per line)\"\r\n        />\r\n        <button\r\n          className=\"mt-2 bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded\"\r\n          onClick={parseTextBlock}\r\n        >\r\n          Parse Block\r\n        </button>\r\n      </div>\r\n      \r\n      <form onSubmit={addDrill} className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Purpose</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"purpose\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.purpose}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Plane</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"plane\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.plane}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Muscles</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"muscles\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.muscles}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Joint Actions</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"joint_actions\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.joint_actions}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Nervous System</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"nervous_system\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.nervous_system}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Psych Components</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"psych_components\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.psych_components}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Tendons Loaded</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tendons_loaded\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.tendons_loaded}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Influences</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"influences\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.influences}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Execution Needs</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"execution_needs\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.execution_needs}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Regression</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"regression\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white\"\r\n            value={newDrill.regression}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Notes</label>\r\n          <textarea\r\n            name=\"notes\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-24\"\r\n            value={newDrill.notes}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label className=\"block mb-2 text-gray-300\">Instructions</label>\r\n          <textarea\r\n            name=\"instructions\"\r\n            className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-32\"\r\n            value={newDrill.instructions}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        \r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-green-600 hover:bg-green-500 text-white px-6 py-3 rounded font-medium\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Adding...' : 'Add Drill'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}