{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bravo\\\\Downloads\\\\BIG-DIM\\\\dim-drill-dashboard\\\\src\\\\components\\\\DrillDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { supabase } from '../config/supabase';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DrillDashboard() {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [newDrill, setNewDrill] = useState({\n    name: '',\n    purpose: '',\n    plane: '',\n    muscles: '',\n    joint_actions: '',\n    nervous_system: '',\n    psych_component: '',\n    tendons_loaded: '',\n    influences: '',\n    execution_needs: '',\n    regression: '',\n    notes: ''\n  });\n  const [textBlock, setTextBlock] = useState('');\n  const navigate = useNavigate();\n  async function addDrill() {\n    try {\n      setLoading(true);\n      setError(null);\n      const isEmpty = Object.values(newDrill).every(value => value.trim() === '');\n      if (isEmpty) {\n        setError('Please fill in at least one field');\n        return;\n      }\n      const {\n        data,\n        error\n      } = await supabase.from('drills').insert([newDrill]).select();\n      if (error) throw error;\n      if (data && Array.isArray(data)) {\n        // Reset form\n        setNewDrill({\n          name: '',\n          purpose: '',\n          plane: '',\n          muscles: '',\n          joint_actions: '',\n          nervous_system: '',\n          psych_component: '',\n          tendons_loaded: '',\n          influences: '',\n          execution_needs: '',\n          regression: '',\n          notes: ''\n        });\n        setTextBlock('');\n\n        // Show success message and redirect to library\n        alert('Drill added successfully!');\n        navigate('/library');\n      }\n    } catch (err) {\n      setError('Failed to add drill: ' + err.message);\n      console.error('Error adding drill:', err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  function handleChange(field, value) {\n    setNewDrill({\n      ...newDrill,\n      [field]: value\n    });\n  }\n  function parseTextBlock() {\n    try {\n      setError(null);\n      const lines = textBlock.split('\\n');\n      const parsed = {\n        ...newDrill\n      };\n      lines.forEach(line => {\n        const [keyRaw, ...rest] = line.split(':');\n        if (!keyRaw || rest.length === 0) return;\n        const key = keyRaw.trim().toLowerCase().replace(/\\s+/g, '_');\n        const value = rest.join(':').trim();\n        if (key in newDrill) parsed[key] = value;\n      });\n      setNewDrill(parsed);\n    } catch (err) {\n      setError('Failed to parse text block: ' + err.message);\n      console.error('Error parsing text block:', err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6 text-orange-400\",\n      children: \"Add New Drill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-500 text-white p-4 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-12 border border-orange-400 rounded-lg p-4 bg-[#2c2c2c]\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4 text-orange-400\",\n        children: \"Paste Full Drill Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"bg-[#1e1e1e] border border-[#3a3a3a] text-[#d0d0d0] p-2 mb-2 w-full rounded h-40\",\n        placeholder: \"Paste your drill block here...\",\n        value: textBlock,\n        onChange: e => setTextBlock(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-700 hover:bg-blue-600 text-white px-4 py-2 rounded mb-2 disabled:opacity-50\",\n        onClick: parseTextBlock,\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Parse Block'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4 text-orange-400\",\n        children: \"Drill Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), Object.keys(newDrill).map((field, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"bg-[#2c2c2c] border border-[#3a3a3a] text-[#d0d0d0] p-2 mb-2 w-full rounded\",\n        placeholder: field.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n        value: newDrill[field],\n        onChange: e => handleChange(field, e.target.value),\n        disabled: loading\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-orange-600 hover:bg-orange-500 text-white px-4 py-2 rounded disabled:opacity-50 mt-4\",\n        onClick: addDrill,\n        disabled: loading,\n        children: loading ? 'Adding...' : 'Add Drill'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(DrillDashboard, \"gnVXRAB3MMZr28urbukmQZm8MKY=\", false, function () {\n  return [useNavigate];\n});\n_c = DrillDashboard;\nvar _c;\n$RefreshReg$(_c, \"DrillDashboard\");","map":{"version":3,"names":["useState","supabase","useNavigate","jsxDEV","_jsxDEV","DrillDashboard","_s","error","setError","loading","setLoading","newDrill","setNewDrill","name","purpose","plane","muscles","joint_actions","nervous_system","psych_component","tendons_loaded","influences","execution_needs","regression","notes","textBlock","setTextBlock","navigate","addDrill","isEmpty","Object","values","every","value","trim","data","from","insert","select","Array","isArray","alert","err","message","console","handleChange","field","parseTextBlock","lines","split","parsed","forEach","line","keyRaw","rest","length","key","toLowerCase","replace","join","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","onClick","disabled","keys","map","index","l","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/bravo/Downloads/BIG-DIM/dim-drill-dashboard/src/components/DrillDashboard.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { supabase } from '../config/supabase';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport function DrillDashboard() {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newDrill, setNewDrill] = useState({\r\n    name: '', purpose: '', plane: '', muscles: '', joint_actions: '', nervous_system: '',\r\n    psych_component: '', tendons_loaded: '', influences: '', execution_needs: '', regression: '', notes: ''\r\n  });\r\n  const [textBlock, setTextBlock] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  async function addDrill() {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const isEmpty = Object.values(newDrill).every(value => value.trim() === '');\r\n      if (isEmpty) {\r\n        setError('Please fill in at least one field');\r\n        return;\r\n      }\r\n\r\n      const { data, error } = await supabase.from('drills').insert([newDrill]).select();\r\n      if (error) throw error;\r\n\r\n      if (data && Array.isArray(data)) {\r\n        // Reset form\r\n        setNewDrill({\r\n          name: '', purpose: '', plane: '', muscles: '', joint_actions: '', nervous_system: '',\r\n          psych_component: '', tendons_loaded: '', influences: '', execution_needs: '', regression: '', notes: ''\r\n        });\r\n        setTextBlock('');\r\n        \r\n        // Show success message and redirect to library\r\n        alert('Drill added successfully!');\r\n        navigate('/library');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to add drill: ' + err.message);\r\n      console.error('Error adding drill:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleChange(field, value) {\r\n    setNewDrill({ ...newDrill, [field]: value });\r\n  }\r\n\r\n  function parseTextBlock() {\r\n    try {\r\n      setError(null);\r\n      const lines = textBlock.split('\\n');\r\n      const parsed = { ...newDrill };\r\n      lines.forEach(line => {\r\n        const [keyRaw, ...rest] = line.split(':');\r\n        if (!keyRaw || rest.length === 0) return;\r\n        const key = keyRaw.trim().toLowerCase().replace(/\\s+/g, '_');\r\n        const value = rest.join(':').trim();\r\n        if (key in newDrill) parsed[key] = value;\r\n      });\r\n      setNewDrill(parsed);\r\n    } catch (err) {\r\n      setError('Failed to parse text block: ' + err.message);\r\n      console.error('Error parsing text block:', err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-semibold mb-6 text-orange-400\">Add New Drill</h2>\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-500 text-white p-4 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-12 border border-orange-400 rounded-lg p-4 bg-[#2c2c2c]\">\r\n        <h3 className=\"text-xl font-semibold mb-4 text-orange-400\">Paste Full Drill Block</h3>\r\n        <textarea\r\n          className=\"bg-[#1e1e1e] border border-[#3a3a3a] text-[#d0d0d0] p-2 mb-2 w-full rounded h-40\"\r\n          placeholder=\"Paste your drill block here...\"\r\n          value={textBlock}\r\n          onChange={e => setTextBlock(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"bg-blue-700 hover:bg-blue-600 text-white px-4 py-2 rounded mb-2 disabled:opacity-50\"\r\n          onClick={parseTextBlock}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Processing...' : 'Parse Block'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-xl font-semibold mb-4 text-orange-400\">Drill Details</h3>\r\n        {Object.keys(newDrill).map((field, index) => (\r\n          <input\r\n            key={index}\r\n            className=\"bg-[#2c2c2c] border border-[#3a3a3a] text-[#d0d0d0] p-2 mb-2 w-full rounded\"\r\n            placeholder={field.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n            value={newDrill[field]}\r\n            onChange={e => handleChange(field, e.target.value)}\r\n            disabled={loading}\r\n          />\r\n        ))}\r\n        <button \r\n          className=\"bg-orange-600 hover:bg-orange-500 text-white px-4 py-2 rounded disabled:opacity-50 mt-4\" \r\n          onClick={addDrill}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Adding...' : 'Add Drill'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}