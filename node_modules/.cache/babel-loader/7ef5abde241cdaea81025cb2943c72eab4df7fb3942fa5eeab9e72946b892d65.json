{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bravo\\\\Downloads\\\\BIG-DIM\\\\dim-drill-dashboard\\\\src\\\\components\\\\drills\\\\DrillLibrary.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Toast } from '../common/Toast';\nimport DrillItem from './DrillItem';\nimport ConfirmationModal from '../common/ConfirmationModal';\nimport { DRILL_FIELDS } from '../../constants/drillFields';\nimport { useDrillLibrary } from '../../hooks/useDrillLibrary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DrillLibrary() {\n  _s();\n  const {\n    drills,\n    loading,\n    error,\n    drillToDelete,\n    editMode,\n    editedDrill,\n    toast,\n    loadDrills,\n    handleStartEdit,\n    handleCancelEdit,\n    handleFieldEdit,\n    handleSaveEdit,\n    deleteDrill,\n    confirmDelete,\n    setDrillToDelete: setDrillToDeleteState\n  } = useDrillLibrary();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: \"Loading drills...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : drills.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-400\",\n      children: \"No drills found. Add some drills to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: drills.map(drill => /*#__PURE__*/_jsxDEV(DrillItem, {\n        drill: drill,\n        setDrill: updatedDrill => {\n          loadDrills(); // Refresh the list after update\n        },\n        editMode: editMode,\n        editedDrill: editedDrill,\n        onStartEdit: handleStartEdit,\n        onCancelEdit: handleCancelEdit,\n        onSaveEdit: handleSaveEdit,\n        onDelete: id => {\n          setDrillToDeleteState(drills.find(drill => drill.id === id));\n        },\n        onFieldEdit: handleFieldEdit,\n        fields: DRILL_FIELDS\n      }, drill.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), drillToDelete && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      isOpen: !!drillToDelete,\n      onCancel: () => {\n        setDrillToDeleteState(null);\n      },\n      onConfirm: confirmDelete,\n      title: \"Delete Drill\",\n      message: `Are you sure you want to delete the drill \"${drillToDelete.name}\"?`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), toast.show && /*#__PURE__*/_jsxDEV(Toast, {\n      type: toast.type,\n      message: toast.message,\n      onClose: () => setToast(prev => ({\n        ...prev,\n        show: false\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(DrillLibrary, \"BB1WHasNQtFLMA/D9RAhy30AfC8=\", false, function () {\n  return [useDrillLibrary];\n});\n_c = DrillLibrary;\nvar _c;\n$RefreshReg$(_c, \"DrillLibrary\");","map":{"version":3,"names":["React","Toast","DrillItem","ConfirmationModal","DRILL_FIELDS","useDrillLibrary","jsxDEV","_jsxDEV","DrillLibrary","_s","drills","loading","error","drillToDelete","editMode","editedDrill","toast","loadDrills","handleStartEdit","handleCancelEdit","handleFieldEdit","handleSaveEdit","deleteDrill","confirmDelete","setDrillToDelete","setDrillToDeleteState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","drill","setDrill","updatedDrill","onStartEdit","onCancelEdit","onSaveEdit","onDelete","id","find","onFieldEdit","fields","isOpen","onCancel","onConfirm","title","message","name","show","type","onClose","setToast","prev","_c","$RefreshReg$"],"sources":["C:/Users/bravo/Downloads/BIG-DIM/dim-drill-dashboard/src/components/drills/DrillLibrary.jsx"],"sourcesContent":["import React from 'react';\nimport { Toast } from '../common/Toast';\nimport DrillItem from './DrillItem';\nimport ConfirmationModal from '../common/ConfirmationModal';\nimport { DRILL_FIELDS } from '../../constants/drillFields';\nimport { useDrillLibrary } from '../../hooks/useDrillLibrary';\n\nexport function DrillLibrary() {\n  const {\n    drills,\n    loading,\n    error,\n    drillToDelete,\n    editMode,\n    editedDrill,\n    toast,\n    loadDrills,\n    handleStartEdit,\n    handleCancelEdit,\n    handleFieldEdit,\n    handleSaveEdit,\n    deleteDrill,\n    confirmDelete,\n    setDrillToDelete: setDrillToDeleteState\n  } = useDrillLibrary();\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {loading ? (\n        <div className=\"text-center py-8\">Loading drills...</div>\n      ) : drills.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-400\">No drills found. Add some drills to get started.</div>\n      ) : (\n        <div className=\"space-y-4\">\n          {drills.map((drill) => (\n            <DrillItem\n              key={drill.id}\n              drill={drill}\n              setDrill={(updatedDrill) => {\n                loadDrills(); // Refresh the list after update\n              }}\n              editMode={editMode}\n              editedDrill={editedDrill}\n              onStartEdit={handleStartEdit}\n              onCancelEdit={handleCancelEdit}\n              onSaveEdit={handleSaveEdit}\n              onDelete={(id) => {\n                setDrillToDeleteState(drills.find(drill => drill.id === id));\n              }}\n              onFieldEdit={handleFieldEdit}\n              fields={DRILL_FIELDS}\n            />\n          ))}\n        </div>\n      )}\n\n      {drillToDelete && (\n        <ConfirmationModal\n          isOpen={!!drillToDelete}\n          onCancel={() => {\n            setDrillToDeleteState(null);\n          }}\n          onConfirm={confirmDelete}\n          title=\"Delete Drill\"\n          message={`Are you sure you want to delete the drill \"${drillToDelete.name}\"?`}\n        />\n      )}\n\n      {toast.show && (\n        <Toast\n          type={toast.type}\n          message={toast.message}\n          onClose={() => setToast(prev => ({ ...prev, show: false }))}\n        />\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}