{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bravo\\\\Downloads\\\\BIG-DIM\\\\dim-drill-dashboard\\\\src\\\\components\\\\DrillInstructions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../config/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DrillInstructions() {\n  _s();\n  const {\n    drillId\n  } = useParams();\n  const navigate = useNavigate();\n  const [drill, setDrill] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [editedInstructions, setEditedInstructions] = useState('');\n  const [newInstructions, setNewInstructions] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  useEffect(() => {\n    if (drillId) {\n      fetchDrillAndInstructions();\n    } else {\n      setLoading(false);\n    }\n  }, [drillId]);\n  async function fetchDrillAndInstructions() {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch the drill\n      const {\n        data: drillData,\n        error: drillError\n      } = await supabase.from('drills').select('*').eq('id', drillId).single();\n      if (drillError) {\n        if (drillError.code === 'PGRST116') {\n          // Drill not found\n          setDrill(null);\n          setEditedInstructions(null);\n          setLoading(false);\n          return;\n        }\n        throw drillError;\n      }\n      setDrill(drillData);\n\n      // Try to fetch instructions\n      const {\n        data: instructionsData,\n        error: instructionsError\n      } = await supabase.from('drill_instructions').select('*').eq('drill_id', drillId).single();\n      if (instructionsError) {\n        if (instructionsError.code === 'PGRST116') {\n          // Instructions not found, create empty instructions\n          const {\n            data: newInstructions,\n            error: createError\n          } = await supabase.from('drill_instructions').insert([{\n            drill_id: drillId,\n            instructions: '',\n            steps: '',\n            tips: '',\n            common_mistakes: '',\n            safety_notes: ''\n          }]).select().single();\n          if (createError) {\n            console.error('Error creating empty instructions:', createError);\n            setEditedInstructions(null);\n          } else {\n            setEditedInstructions(newInstructions);\n          }\n        } else {\n          console.error('Error fetching instructions:', instructionsError);\n          setEditedInstructions(null);\n        }\n      } else {\n        setEditedInstructions(instructionsData);\n      }\n    } catch (err) {\n      setError('Failed to fetch drill instructions: ' + (err.message || 'Unknown error'));\n      console.error('Error fetching drill and instructions:', err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function saveInstructions() {\n    try {\n      setSaving(true);\n      setError(null);\n      const {\n        error\n      } = await supabase.from('drills').update({\n        instructions: editedInstructions\n      }).eq('id', drillId);\n      if (error) throw error;\n\n      // Update the drill state with the new instructions\n      setDrill({\n        ...drill,\n        instructions: editedInstructions\n      });\n      setEditMode(false);\n      setSuccessMessage('Instructions saved successfully!');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      setError('Failed to save instructions: ' + err.message);\n      console.error('Error saving instructions:', err);\n    } finally {\n      setSaving(false);\n    }\n  }\n  async function addNewInstructions() {\n    try {\n      setSaving(true);\n      setError(null);\n      const {\n        error\n      } = await supabase.from('drills').update({\n        instructions: newInstructions\n      }).eq('id', drillId).select();\n      if (error) throw error;\n\n      // Update the drill state with the new instructions\n      setDrill({\n        ...drill,\n        instructions: newInstructions\n      });\n\n      // Don't reset the instructions - keep them visible\n      setEditedInstructions(newInstructions);\n      setNewInstructions('');\n\n      // Show a success message\n      setSuccessMessage('Instructions added successfully!');\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      setError('Failed to add instructions: ' + err.message);\n      console.error('Error adding instructions:', err);\n    } finally {\n      setSaving(false);\n    }\n  }\n\n  // Add a function to handle drill deletion\n  async function deleteDrill() {\n    setShowDeleteConfirm(true);\n  }\n  async function confirmDelete() {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // First, delete any associated instructions\n      const {\n        error: instructionsError\n      } = await supabase.from('drill_instructions').delete().eq('drill_id', drillId);\n      if (instructionsError) {\n        console.error('Error deleting drill instructions:', instructionsError);\n        // Continue with drill deletion even if instructions deletion fails\n      }\n\n      // Then delete the drill\n      const {\n        error\n      } = await supabase.from('drills').delete().eq('id', drillId);\n      if (error) throw error;\n\n      // Show success message\n      setSuccessMessage('Drill deleted successfully');\n\n      // Navigate back to the instructions list after a short delay\n      setTimeout(() => {\n        navigate('/instructions');\n      }, 1500);\n    } catch (err) {\n      setError('Failed to delete drill: ' + (err.message || 'Unknown error'));\n      console.error('Error deleting drill:', err);\n    } finally {\n      setLoading(false);\n      setShowDeleteConfirm(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-6 text-orange-400\",\n      children: \"Drill Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded\",\n        to: \"/instructions\",\n        children: \"Back to Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), drill && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteDrill,\n        className: \"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\",\n        children: \"Delete Drill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-500 text-white p-4 rounded mb-4\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: \"Loading drill instructions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-500 text-white p-4 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this) : drillId && !drill ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-400\",\n      children: \"Drill not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this) : drillId && drill ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#2c2c2c] border border-[#3a3a3a] p-6 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-orange-300\",\n          children: [drill.name, \" Instructions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), !editMode && drill.instructions ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded\",\n          onClick: () => setEditMode(true),\n          children: \"Edit Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2 text-gray-300\",\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-64\",\n            value: editedInstructions,\n            onChange: e => setEditedInstructions(e.target.value),\n            placeholder: \"Enter detailed instructions for this drill...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\",\n            onClick: () => {\n              setEditedInstructions(drill.instructions || '');\n              setEditMode(false);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\",\n            onClick: saveInstructions,\n            disabled: saving,\n            children: saving ? 'Saving...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this) : drill.instructions ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-lg font-semibold text-blue-400 mb-2\",\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300 whitespace-pre-line\",\n            children: drill.instructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 italic mb-4\",\n          children: \"No instructions available yet. Please add instructions for this drill.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2 text-gray-300\",\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-64\",\n            value: newInstructions,\n            onChange: e => setNewInstructions(e.target.value),\n            placeholder: \"Enter detailed instructions for this drill...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\",\n          onClick: addNewInstructions,\n          disabled: saving,\n          children: saving ? 'Saving...' : 'Add Instructions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-400\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a drill from the Drill Library to view its instructions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), showDeleteConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#2c2c2c] p-6 rounded-lg shadow-lg max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-orange-400 mb-4\",\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6\",\n          children: \"Are you sure you want to delete this drill?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\",\n            onClick: () => setShowDeleteConfirm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\",\n            onClick: confirmDelete,\n            children: \"Yes, Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(DrillInstructions, \"E8272mKWcJiObmEglhnNTqj3bqA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DrillInstructions;\nvar _c;\n$RefreshReg$(_c, \"DrillInstructions\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","supabase","jsxDEV","_jsxDEV","DrillInstructions","_s","drillId","navigate","drill","setDrill","loading","setLoading","error","setError","saving","setSaving","editMode","setEditMode","editedInstructions","setEditedInstructions","newInstructions","setNewInstructions","successMessage","setSuccessMessage","showDeleteConfirm","setShowDeleteConfirm","fetchDrillAndInstructions","data","drillData","drillError","from","select","eq","single","code","instructionsData","instructionsError","createError","insert","drill_id","instructions","steps","tips","common_mistakes","safety_notes","console","err","message","saveInstructions","update","setTimeout","addNewInstructions","deleteDrill","confirmDelete","delete","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","name","value","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bravo/Downloads/BIG-DIM/dim-drill-dashboard/src/components/DrillInstructions.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { supabase } from '../config/supabase';\r\n\r\nexport function DrillInstructions() {\r\n  const { drillId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [drill, setDrill] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editedInstructions, setEditedInstructions] = useState('');\r\n  const [newInstructions, setNewInstructions] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (drillId) {\r\n      fetchDrillAndInstructions();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [drillId]);\r\n\r\n  async function fetchDrillAndInstructions() {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Fetch the drill\r\n      const { data: drillData, error: drillError } = await supabase\r\n        .from('drills')\r\n        .select('*')\r\n        .eq('id', drillId)\r\n        .single();\r\n      \r\n      if (drillError) {\r\n        if (drillError.code === 'PGRST116') {\r\n          // Drill not found\r\n          setDrill(null);\r\n          setEditedInstructions(null);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        throw drillError;\r\n      }\r\n      \r\n      setDrill(drillData);\r\n      \r\n      // Try to fetch instructions\r\n      const { data: instructionsData, error: instructionsError } = await supabase\r\n        .from('drill_instructions')\r\n        .select('*')\r\n        .eq('drill_id', drillId)\r\n        .single();\r\n      \r\n      if (instructionsError) {\r\n        if (instructionsError.code === 'PGRST116') {\r\n          // Instructions not found, create empty instructions\r\n          const { data: newInstructions, error: createError } = await supabase\r\n            .from('drill_instructions')\r\n            .insert([\r\n              {\r\n                drill_id: drillId,\r\n                instructions: '',\r\n                steps: '',\r\n                tips: '',\r\n                common_mistakes: '',\r\n                safety_notes: ''\r\n              }\r\n            ])\r\n            .select()\r\n            .single();\r\n          \r\n          if (createError) {\r\n            console.error('Error creating empty instructions:', createError);\r\n            setEditedInstructions(null);\r\n          } else {\r\n            setEditedInstructions(newInstructions);\r\n          }\r\n        } else {\r\n          console.error('Error fetching instructions:', instructionsError);\r\n          setEditedInstructions(null);\r\n        }\r\n      } else {\r\n        setEditedInstructions(instructionsData);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to fetch drill instructions: ' + (err.message || 'Unknown error'));\r\n      console.error('Error fetching drill and instructions:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  async function saveInstructions() {\r\n    try {\r\n      setSaving(true);\r\n      setError(null);\r\n      \r\n      const { error } = await supabase\r\n        .from('drills')\r\n        .update({ instructions: editedInstructions })\r\n        .eq('id', drillId);\r\n      \r\n      if (error) throw error;\r\n      \r\n      // Update the drill state with the new instructions\r\n      setDrill({\r\n        ...drill,\r\n        instructions: editedInstructions\r\n      });\r\n      \r\n      setEditMode(false);\r\n      setSuccessMessage('Instructions saved successfully!');\r\n      \r\n      // Clear success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n    } catch (err) {\r\n      setError('Failed to save instructions: ' + err.message);\r\n      console.error('Error saving instructions:', err);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }\r\n\r\n  async function addNewInstructions() {\r\n    try {\r\n      setSaving(true);\r\n      setError(null);\r\n      \r\n      const { error } = await supabase\r\n        .from('drills')\r\n        .update({ instructions: newInstructions })\r\n        .eq('id', drillId)\r\n        .select();\r\n      \r\n      if (error) throw error;\r\n      \r\n      // Update the drill state with the new instructions\r\n      setDrill({\r\n        ...drill,\r\n        instructions: newInstructions\r\n      });\r\n      \r\n      // Don't reset the instructions - keep them visible\r\n      setEditedInstructions(newInstructions);\r\n      setNewInstructions('');\r\n      \r\n      // Show a success message\r\n      setSuccessMessage('Instructions added successfully!');\r\n      \r\n      // Clear success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n    } catch (err) {\r\n      setError('Failed to add instructions: ' + err.message);\r\n      console.error('Error adding instructions:', err);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  }\r\n\r\n  // Add a function to handle drill deletion\r\n  async function deleteDrill() {\r\n    setShowDeleteConfirm(true);\r\n  }\r\n\r\n  async function confirmDelete() {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // First, delete any associated instructions\r\n      const { error: instructionsError } = await supabase\r\n        .from('drill_instructions')\r\n        .delete()\r\n        .eq('drill_id', drillId);\r\n      \r\n      if (instructionsError) {\r\n        console.error('Error deleting drill instructions:', instructionsError);\r\n        // Continue with drill deletion even if instructions deletion fails\r\n      }\r\n      \r\n      // Then delete the drill\r\n      const { error } = await supabase\r\n        .from('drills')\r\n        .delete()\r\n        .eq('id', drillId);\r\n      \r\n      if (error) throw error;\r\n      \r\n      // Show success message\r\n      setSuccessMessage('Drill deleted successfully');\r\n      \r\n      // Navigate back to the instructions list after a short delay\r\n      setTimeout(() => {\r\n        navigate('/instructions');\r\n      }, 1500);\r\n    } catch (err) {\r\n      setError('Failed to delete drill: ' + (err.message || 'Unknown error'));\r\n      console.error('Error deleting drill:', err);\r\n    } finally {\r\n      setLoading(false);\r\n      setShowDeleteConfirm(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-semibold mb-6 text-orange-400\">Drill Instructions</h2>\r\n      <div className=\"mb-6 flex justify-between\">\r\n        <Link \r\n          className=\"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded\"\r\n          to=\"/instructions\"\r\n        >\r\n          Back to Instructions\r\n        </Link>\r\n        \r\n        {drill && (\r\n          <button\r\n            onClick={deleteDrill}\r\n            className=\"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\"\r\n          >\r\n            Delete Drill\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {successMessage && (\r\n        <div className=\"bg-green-500 text-white p-4 rounded mb-4\">\r\n          {successMessage}\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading drill instructions...</div>\r\n      ) : error ? (\r\n        <div className=\"bg-red-500 text-white p-4 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      ) : drillId && !drill ? (\r\n        <div className=\"text-center py-8 text-gray-400\">Drill not found.</div>\r\n      ) : drillId && drill ? (\r\n        <div className=\"bg-[#2c2c2c] border border-[#3a3a3a] p-6 rounded shadow\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-xl font-bold text-orange-300\">{drill.name} Instructions</h3>\r\n            {!editMode && drill.instructions ? (\r\n              <button \r\n                className=\"bg-blue-600 hover:bg-blue-500 text-white px-4 py-2 rounded\"\r\n                onClick={() => setEditMode(true)}\r\n              >\r\n                Edit Instructions\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n          \r\n          {editMode ? (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block mb-2 text-gray-300\">Instructions</label>\r\n                <textarea\r\n                  className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-64\"\r\n                  value={editedInstructions}\r\n                  onChange={(e) => setEditedInstructions(e.target.value)}\r\n                  placeholder=\"Enter detailed instructions for this drill...\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"flex space-x-2\">\r\n                <button \r\n                  className=\"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\"\r\n                  onClick={() => {\r\n                    setEditedInstructions(drill.instructions || '');\r\n                    setEditMode(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button \r\n                  className=\"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\"\r\n                  onClick={saveInstructions}\r\n                  disabled={saving}\r\n                >\r\n                  {saving ? 'Saving...' : 'Save'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : drill.instructions ? (\r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold text-blue-400 mb-2\">Instructions</h4>\r\n                <p className=\"text-gray-300 whitespace-pre-line\">{drill.instructions}</p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              <p className=\"text-gray-400 italic mb-4\">No instructions available yet. Please add instructions for this drill.</p>\r\n              \r\n              <div>\r\n                <label className=\"block mb-2 text-gray-300\">Instructions</label>\r\n                <textarea\r\n                  className=\"w-full p-3 bg-[#1e1e1e] border border-[#3a3a3a] rounded text-white h-64\"\r\n                  value={newInstructions}\r\n                  onChange={(e) => setNewInstructions(e.target.value)}\r\n                  placeholder=\"Enter detailed instructions for this drill...\"\r\n                />\r\n              </div>\r\n              \r\n              <button \r\n                className=\"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded\"\r\n                onClick={addNewInstructions}\r\n                disabled={saving}\r\n              >\r\n                {saving ? 'Saving...' : 'Add Instructions'}\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-8 text-gray-400\">\r\n          <p>Select a drill from the Drill Library to view its instructions.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Delete Confirmation Popup */}\r\n      {showDeleteConfirm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-[#2c2c2c] p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n            <h3 className=\"text-xl font-bold text-orange-400 mb-4\">Confirm Deletion</h3>\r\n            <p className=\"mb-6\">Are you sure you want to delete this drill?</p>\r\n            <div className=\"flex justify-end space-x-4\">\r\n              <button \r\n                className=\"bg-gray-600 hover:bg-gray-500 text-white px-4 py-2 rounded\"\r\n                onClick={() => setShowDeleteConfirm(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button \r\n                className=\"bg-red-600 hover:bg-red-500 text-white px-4 py-2 rounded\"\r\n                onClick={confirmDelete}\r\n              >\r\n                Yes, Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}